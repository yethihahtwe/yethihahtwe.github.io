[["Map",1,2,9,10,31,32,45,46,53,54,198,199,223,224,64,236,246,247],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.3.0","content-config-digest","154382e3bcc02284","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://yethihahtwe.co.uk\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[]},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":false,\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[[null,{\"themes\":[{\"colors\":{\"activityBar.activeBorder\":\"#f9826c\",\"activityBar.background\":\"#303030\",\"activityBar.border\":\"#1b1f23\",\"activityBar.foreground\":\"#e1e4e8\",\"activityBar.inactiveForeground\":\"#6a737d\",\"activityBarBadge.background\":\"#0366d6\",\"activityBarBadge.foreground\":\"#fff\",\"badge.background\":\"#044289\",\"badge.foreground\":\"#c8e1ff\",\"breadcrumb.activeSelectionForeground\":\"#d1d5da\",\"breadcrumb.focusForeground\":\"#e1e4e8\",\"breadcrumb.foreground\":\"#959da5\",\"breadcrumbPicker.background\":\"#2b3036\",\"button.background\":\"#176f2c\",\"button.foreground\":\"#dcffe4\",\"button.hoverBackground\":\"#22863a\",\"button.secondaryBackground\":\"#444d56\",\"button.secondaryForeground\":\"#fff\",\"button.secondaryHoverBackground\":\"#586069\",\"checkbox.background\":\"#444d56\",\"checkbox.border\":\"#1b1f23\",\"debugToolBar.background\":\"#2b3036\",\"descriptionForeground\":\"#959da5\",\"diffEditor.insertedTextBackground\":\"#28a74530\",\"diffEditor.removedTextBackground\":\"#d73a4930\",\"dropdown.background\":\"#2f363d\",\"dropdown.border\":\"#1b1f23\",\"dropdown.foreground\":\"#e1e4e8\",\"dropdown.listBackground\":\"#24292e\",\"editor.background\":\"#202020\",\"editor.findMatchBackground\":\"#ffd33d44\",\"editor.findMatchHighlightBackground\":\"#ffd33d22\",\"editor.focusedStackFrameHighlightBackground\":\"#2b6a3033\",\"editor.foldBackground\":\"#58606915\",\"editor.foreground\":\"#e1e4e8\",\"editor.inactiveSelectionBackground\":\"#3392FF22\",\"editor.lineHighlightBackground\":\"#2b3036\",\"editor.linkedEditingBackground\":\"#3392FF22\",\"editor.selectionBackground\":\"#3392FF44\",\"editor.selectionHighlightBackground\":\"#17E5E633\",\"editor.selectionHighlightBorder\":\"#17E5E600\",\"editor.stackFrameHighlightBackground\":\"#C6902625\",\"editor.wordHighlightBackground\":\"#17E5E600\",\"editor.wordHighlightBorder\":\"#17E5E699\",\"editor.wordHighlightStrongBackground\":\"#17E5E600\",\"editor.wordHighlightStrongBorder\":\"#17E5E666\",\"editorBracketHighlight.foreground1\":\"#79b8ff\",\"editorBracketHighlight.foreground2\":\"#ffab70\",\"editorBracketHighlight.foreground3\":\"#b392f0\",\"editorBracketHighlight.foreground4\":\"#79b8ff\",\"editorBracketHighlight.foreground5\":\"#ffab70\",\"editorBracketHighlight.foreground6\":\"#b392f0\",\"editorBracketMatch.background\":\"#17E5E650\",\"editorBracketMatch.border\":\"#17E5E600\",\"editorCursor.foreground\":\"#c8e1ff\",\"editorError.foreground\":\"#f97583\",\"editorGroup.border\":\"#1b1f23\",\"editorGroupHeader.tabsBackground\":\"#282828\",\"editorGroupHeader.tabsBorder\":\"#1b1f23\",\"editorGutter.addedBackground\":\"#28a745\",\"editorGutter.deletedBackground\":\"#ea4a5a\",\"editorGutter.modifiedBackground\":\"#2188ff\",\"editorIndentGuide.activeBackground\":\"#444d56\",\"editorIndentGuide.background\":\"#2f363d\",\"editorLineNumber.activeForeground\":\"#e1e4e8\",\"editorLineNumber.foreground\":\"#444d56\",\"editorOverviewRuler.border\":\"#1b1f23\",\"editorWarning.foreground\":\"#ffea7f\",\"editorWhitespace.foreground\":\"#444d56\",\"editorWidget.background\":\"#1f2428\",\"errorForeground\":\"#f97583\",\"focusBorder\":\"#005cc5\",\"foreground\":\"#d1d5da\",\"gitDecoration.addedResourceForeground\":\"#34d058\",\"gitDecoration.conflictingResourceForeground\":\"#ffab70\",\"gitDecoration.deletedResourceForeground\":\"#ea4a5a\",\"gitDecoration.ignoredResourceForeground\":\"#6a737d\",\"gitDecoration.modifiedResourceForeground\":\"#79b8ff\",\"gitDecoration.submoduleResourceForeground\":\"#6a737d\",\"gitDecoration.untrackedResourceForeground\":\"#34d058\",\"input.background\":\"#2f363d\",\"input.border\":\"#1b1f23\",\"input.foreground\":\"#e1e4e8\",\"input.placeholderForeground\":\"#959da5\",\"list.activeSelectionBackground\":\"#39414a\",\"list.activeSelectionForeground\":\"#e1e4e8\",\"list.focusBackground\":\"#044289\",\"list.hoverBackground\":\"#282e34\",\"list.hoverForeground\":\"#e1e4e8\",\"list.inactiveFocusBackground\":\"#1d2d3e\",\"list.inactiveSelectionBackground\":\"#282e34\",\"list.inactiveSelectionForeground\":\"#e1e4e8\",\"notificationCenterHeader.background\":\"#24292e\",\"notificationCenterHeader.foreground\":\"#959da5\",\"notifications.background\":\"#2f363d\",\"notifications.border\":\"#1b1f23\",\"notifications.foreground\":\"#e1e4e8\",\"notificationsErrorIcon.foreground\":\"#ea4a5a\",\"notificationsInfoIcon.foreground\":\"#79b8ff\",\"notificationsWarningIcon.foreground\":\"#ffab70\",\"panel.background\":\"#202020\",\"panel.border\":\"#1b1f23\",\"panelInput.border\":\"#2f363d\",\"panelTitle.activeBorder\":\"#f9826c\",\"panelTitle.activeForeground\":\"#e1e4e8\",\"panelTitle.inactiveForeground\":\"#959da5\",\"peekViewEditor.background\":\"#1f242888\",\"peekViewEditor.matchHighlightBackground\":\"#ffd33d33\",\"peekViewResult.background\":\"#1f2428\",\"peekViewResult.matchHighlightBackground\":\"#ffd33d33\",\"pickerGroup.border\":\"#444d56\",\"pickerGroup.foreground\":\"#e1e4e8\",\"progressBar.background\":\"#0366d6\",\"quickInput.background\":\"#24292e\",\"quickInput.foreground\":\"#e1e4e8\",\"scrollbar.shadow\":\"#0008\",\"scrollbarSlider.activeBackground\":\"#6a737d88\",\"scrollbarSlider.background\":\"#6a737d33\",\"scrollbarSlider.hoverBackground\":\"#6a737d44\",\"settings.headerForeground\":\"#e1e4e8\",\"settings.modifiedItemIndicator\":\"#0366d6\",\"sideBar.background\":\"#1f2428\",\"sideBar.border\":\"#1b1f23\",\"sideBar.foreground\":\"#d1d5da\",\"sideBarSectionHeader.background\":\"#1f2428\",\"sideBarSectionHeader.border\":\"#1b1f23\",\"sideBarSectionHeader.foreground\":\"#e1e4e8\",\"sideBarTitle.foreground\":\"#e1e4e8\",\"statusBar.background\":\"#303030\",\"statusBar.border\":\"#1b1f23\",\"statusBar.debuggingBackground\":\"#931c06\",\"statusBar.debuggingForeground\":\"#fff\",\"statusBar.foreground\":\"#d1d5da\",\"statusBar.noFolderBackground\":\"#24292e\",\"statusBarItem.prominentBackground\":\"#282e34\",\"statusBarItem.remoteBackground\":\"#303030\",\"statusBarItem.remoteForeground\":\"#d1d5da\",\"tab.activeBackground\":\"#303030\",\"tab.activeBorder\":\"#24292e\",\"tab.activeBorderTop\":\"#f9826c\",\"tab.activeForeground\":\"#e1e4e8\",\"tab.border\":\"#1b1f23\",\"tab.hoverBackground\":\"#24292e\",\"tab.inactiveBackground\":\"#1f2428\",\"tab.inactiveForeground\":\"#959da5\",\"tab.unfocusedActiveBorder\":\"#24292e\",\"tab.unfocusedActiveBorderTop\":\"#1b1f23\",\"tab.unfocusedHoverBackground\":\"#24292e\",\"terminal.ansiBlack\":\"#586069\",\"terminal.ansiBlue\":\"#2188ff\",\"terminal.ansiBrightBlack\":\"#959da5\",\"terminal.ansiBrightBlue\":\"#79b8ff\",\"terminal.ansiBrightCyan\":\"#56d4dd\",\"terminal.ansiBrightGreen\":\"#85e89d\",\"terminal.ansiBrightMagenta\":\"#b392f0\",\"terminal.ansiBrightRed\":\"#f97583\",\"terminal.ansiBrightWhite\":\"#fafbfc\",\"terminal.ansiBrightYellow\":\"#ffea7f\",\"terminal.ansiCyan\":\"#39c5cf\",\"terminal.ansiGreen\":\"#34d058\",\"terminal.ansiMagenta\":\"#b392f0\",\"terminal.ansiRed\":\"#ea4a5a\",\"terminal.ansiWhite\":\"#d1d5da\",\"terminal.ansiYellow\":\"#ffea7f\",\"terminal.foreground\":\"#d1d5da\",\"terminal.tab.activeBorder\":\"#f9826c\",\"terminalCursor.background\":\"#586069\",\"terminalCursor.foreground\":\"#79b8ff\",\"textBlockQuote.background\":\"#24292e\",\"textBlockQuote.border\":\"#444d56\",\"textCodeBlock.background\":\"#2f363d\",\"textLink.activeForeground\":\"#c8e1ff\",\"textLink.foreground\":\"#79b8ff\",\"textPreformat.foreground\":\"#d1d5da\",\"textSeparator.foreground\":\"#586069\",\"titleBar.activeBackground\":\"#303030\",\"titleBar.activeForeground\":\"#e1e4e8\",\"titleBar.border\":\"#1b1f23\",\"titleBar.inactiveBackground\":\"#1f2428\",\"titleBar.inactiveForeground\":\"#959da5\",\"tree.indentGuidesStroke\":\"#2f363d\",\"welcomePage.buttonBackground\":\"#2f363d\",\"welcomePage.buttonHoverBackground\":\"#444d56\"},\"displayName\":\"GitHub Dark\",\"name\":\"Spectre Dark\",\"semanticHighlighting\":true,\"tokenColors\":[{\"scope\":[\"comment\",\"punctuation.definition.comment\",\"string.comment\"],\"settings\":{\"foreground\":\"#6a737d\"}},{\"scope\":[\"constant\",\"entity.name.constant\",\"variable.other.constant\",\"variable.other.enummember\",\"variable.language\"],\"settings\":{\"foreground\":\"#79b8ff\"}},{\"scope\":[\"entity\",\"entity.name\"],\"settings\":{\"foreground\":\"#b392f0\"}},{\"scope\":\"variable.parameter.function\",\"settings\":{\"foreground\":\"#e1e4e8\"}},{\"scope\":\"entity.name.tag\",\"settings\":{\"foreground\":\"#85e89d\"}},{\"scope\":\"keyword\",\"settings\":{\"foreground\":\"#f97583\"}},{\"scope\":[\"storage\",\"storage.type\"],\"settings\":{\"foreground\":\"#f97583\"}},{\"scope\":[\"storage.modifier.package\",\"storage.modifier.import\",\"storage.type.java\"],\"settings\":{\"foreground\":\"#e1e4e8\"}},{\"scope\":[\"string\",\"punctuation.definition.string\",\"string punctuation.section.embedded source\"],\"settings\":{\"foreground\":\"#9ecbff\"}},{\"scope\":\"support\",\"settings\":{\"foreground\":\"#79b8ff\"}},{\"scope\":\"meta.property-name\",\"settings\":{\"foreground\":\"#79b8ff\"}},{\"scope\":\"variable\",\"settings\":{\"foreground\":\"#ffab70\"}},{\"scope\":\"variable.other\",\"settings\":{\"foreground\":\"#e1e4e8\"}},{\"scope\":\"invalid.broken\",\"settings\":{\"fontStyle\":\"italic\",\"foreground\":\"#fdaeb7\"}},{\"scope\":\"invalid.deprecated\",\"settings\":{\"fontStyle\":\"italic\",\"foreground\":\"#fdaeb7\"}},{\"scope\":\"invalid.illegal\",\"settings\":{\"fontStyle\":\"italic\",\"foreground\":\"#fdaeb7\"}},{\"scope\":\"invalid.unimplemented\",\"settings\":{\"fontStyle\":\"italic\",\"foreground\":\"#fdaeb7\"}},{\"scope\":\"carriage-return\",\"settings\":{\"background\":\"#f97583\",\"content\":\"^M\",\"fontStyle\":\"italic underline\",\"foreground\":\"#24292e\"}},{\"scope\":\"message.error\",\"settings\":{\"foreground\":\"#fdaeb7\"}},{\"scope\":\"string variable\",\"settings\":{\"foreground\":\"#79b8ff\"}},{\"scope\":[\"source.regexp\",\"string.regexp\"],\"settings\":{\"foreground\":\"#dbedff\"}},{\"scope\":[\"string.regexp.character-class\",\"string.regexp constant.character.escape\",\"string.regexp source.ruby.embedded\",\"string.regexp string.regexp.arbitrary-repitition\"],\"settings\":{\"foreground\":\"#dbedff\"}},{\"scope\":\"string.regexp constant.character.escape\",\"settings\":{\"fontStyle\":\"bold\",\"foreground\":\"#85e89d\"}},{\"scope\":\"support.constant\",\"settings\":{\"foreground\":\"#79b8ff\"}},{\"scope\":\"support.variable\",\"settings\":{\"foreground\":\"#79b8ff\"}},{\"scope\":\"meta.module-reference\",\"settings\":{\"foreground\":\"#79b8ff\"}},{\"scope\":\"punctuation.definition.list.begin.markdown\",\"settings\":{\"foreground\":\"#ffab70\"}},{\"scope\":[\"markup.heading\",\"markup.heading entity.name\"],\"settings\":{\"fontStyle\":\"bold\",\"foreground\":\"#79b8ff\"}},{\"scope\":\"markup.quote\",\"settings\":{\"foreground\":\"#85e89d\"}},{\"scope\":\"markup.italic\",\"settings\":{\"fontStyle\":\"italic\",\"foreground\":\"#e1e4e8\"}},{\"scope\":\"markup.bold\",\"settings\":{\"fontStyle\":\"bold\",\"foreground\":\"#e1e4e8\"}},{\"scope\":[\"markup.underline\"],\"settings\":{\"fontStyle\":\"underline\"}},{\"scope\":[\"markup.strikethrough\"],\"settings\":{\"fontStyle\":\"strikethrough\"}},{\"scope\":\"markup.inline.raw\",\"settings\":{\"foreground\":\"#79b8ff\"}},{\"scope\":[\"markup.deleted\",\"meta.diff.header.from-file\",\"punctuation.definition.deleted\"],\"settings\":{\"background\":\"#86181d\",\"foreground\":\"#fdaeb7\"}},{\"scope\":[\"markup.inserted\",\"meta.diff.header.to-file\",\"punctuation.definition.inserted\"],\"settings\":{\"background\":\"#144620\",\"foreground\":\"#85e89d\"}},{\"scope\":[\"markup.changed\",\"punctuation.definition.changed\"],\"settings\":{\"background\":\"#c24e00\",\"foreground\":\"#ffab70\"}},{\"scope\":[\"markup.ignored\",\"markup.untracked\"],\"settings\":{\"background\":\"#79b8ff\",\"foreground\":\"#2f363d\"}},{\"scope\":\"meta.diff.range\",\"settings\":{\"fontStyle\":\"bold\",\"foreground\":\"#b392f0\"}},{\"scope\":\"meta.diff.header\",\"settings\":{\"foreground\":\"#79b8ff\"}},{\"scope\":\"meta.separator\",\"settings\":{\"fontStyle\":\"bold\",\"foreground\":\"#79b8ff\"}},{\"scope\":\"meta.output\",\"settings\":{\"foreground\":\"#79b8ff\"}},{\"scope\":[\"brackethighlighter.tag\",\"brackethighlighter.curly\",\"brackethighlighter.round\",\"brackethighlighter.square\",\"brackethighlighter.angle\",\"brackethighlighter.quote\"],\"settings\":{\"foreground\":\"#d1d5da\"}},{\"scope\":\"brackethighlighter.unmatched\",\"settings\":{\"foreground\":\"#fdaeb7\"}},{\"scope\":[\"constant.other.reference.link\",\"string.other.link\"],\"settings\":{\"fontStyle\":\"underline\",\"foreground\":\"#dbedff\"}}],\"type\":\"dark\"}]}]],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"responsiveImages\":false,\"serializeConfig\":false},\"legacy\":{\"collections\":false}}","books",["Map",11,12],"test-book",{"id":11,"data":13,"body":25,"filePath":26,"assetImports":27,"digest":29,"deferredRender":30},{"title":14,"description":15,"date":16,"image":17,"info":18},"Testbook","Spectre is a terminal-inspired theme for Astro, built using Astro and TypeScript.",["Date","2024-12-28T17:00:00.000Z"],"__ASTRO_IMAGE_../assets/spectre.png",[19],{"text":20,"icon":21,"link":24},"GitHub",{"type":22,"name":23},"lucide","github","https://github.com/louisescher/spectre","Spectre is a terminal-inspired theme for Astro, built using Astro and TypeScript.\n\nIt was designed after my website as part of my annual tradition to re-design it, and I figured I might as well make a theme out of it.\n\n## Features\n\n- 100 / 100 Lighthouse performance\n- Responsive for all screen sizes\n- Fully accessible\n- Type-Safe\n- Auto-generated sitemap\n- Markdown / MDX Support\n- Builds on content collections\n- Search powered by [pagefind](https://pagefind.app)\n- Comments powered by [giscus](https://giscus.app) (can be turned off)\n- More!\n\n## Lighthouse\n\nSpectre scores 100 Points on every Lighthouse benchmark (Performance, Accessibility, Best Practices, SEO):\n\n![A picture showing a 100/100 Lighthouse score on all tests](/img/lighthouse.png)\n\n## Speedy\n\nSpectre uses no additional frameworks, not even Tailwind. This results in incredibly fast load and build times.\n\n## Configurable\n\nSpectre's unique features can all be turned on or off and even modified. If you, for example, dislike the comments, you can disable them with ease.\n\n---\n\nSpectre is licensed under the MIT license.","src/content/books/test-book.mdx",[28],"../assets/spectre.png","0888fe422fd18404",true,"projects",["Map",33,34],"spectre",{"id":33,"data":35,"body":41,"filePath":42,"assetImports":43,"digest":44,"deferredRender":30},{"title":36,"description":15,"date":37,"image":17,"info":38},"Spectre",["Date","2024-12-28T17:00:00.000Z"],[39],{"text":20,"icon":40,"link":24},{"type":22,"name":23},"Spectre is a terminal-inspired theme for Astro, built using Astro and TypeScript. \r\n\r\nIt was designed after my website as part of my annual tradition to re-design it, and I figured I might as well make a theme out of it.\r\n\r\n## Features\r\n\r\n- 100 / 100 Lighthouse performance\r\n- Responsive for all screen sizes\r\n- Fully accessible\r\n- Type-Safe\r\n- Auto-generated sitemap\r\n- Markdown / MDX Support\r\n- Builds on content collections\r\n- Search powered by [pagefind](https://pagefind.app)\r\n- Comments powered by [giscus](https://giscus.app) (can be turned off)\r\n- More!\r\n\r\n## Lighthouse\r\n\r\nSpectre scores 100 Points on every Lighthouse benchmark (Performance, Accessibility, Best Practices, SEO):\r\n\r\n![A picture showing a 100/100 Lighthouse score on all tests](/img/lighthouse.png)\r\n\r\n## Speedy\r\n\r\nSpectre uses no additional frameworks, not even Tailwind. This results in incredibly fast load and build times.\r\n\r\n## Configurable\r\n\r\nSpectre's unique features can all be turned on or off and even modified. If you, for example, dislike the comments, you can disable them with ease.\r\n\r\n---\r\n\r\nSpectre is licensed under the MIT license.","src/content/projects/spectre.mdx",[28],"d6b95c32eb91993e","other",["Map",47,48],"about",{"id":47,"data":49,"body":50,"filePath":51,"digest":52,"deferredRender":30},{},"A software developer and former medical practitioner specializing in data-driven applications and healthcare technology solutions. Developed offline-first mobile applications, web-based systems, and implementing comprehensive database solutions for healthcare and community organizations.\r\n\r\nHusband of an awesome wife and father of a lovely daughter.\r\n\r\nVisit a demo version of my ongoing solo-dev project at [https://demo.ehssg.org](https://demo.ehssg.org).","src/content/other/about.mdx","b8c78398e77fc654","posts",["Map",55,56,69,70,84,85,99,100,114,115,128,129,143,144,154,155,165,166,176,177,187,188],"hmis-workshop-notes",{"id":55,"data":57,"body":65,"filePath":66,"assetImports":67,"digest":68,"deferredRender":30},{"title":58,"createdAt":59,"description":60,"tags":61,"draft":30,"image":17},"HMIS workshop notes",["Date","2025-02-09T17:00:00.000Z"],"Notes on HMIS workshop",[62],{"id":63,"collection":64},"notes","tags","# HMIS WORKSHOP NOTES","src/content/posts/hmis-workshop-notes.mdx",[28],"b56e933c53f62464","solving-leetcode-stone-game-iii",{"id":69,"data":71,"body":79,"filePath":80,"assetImports":81,"digest":83,"deferredRender":30},{"title":72,"createdAt":73,"description":74,"tags":75,"draft":30,"image":78},"Solving LeetCode Stone Game III",["Date","2025-02-08T17:00:00.000Z"],"Step by Step Guide on solving LeetCode Stone Game III problem",[76],{"id":77,"collection":64},"guide","__ASTRO_IMAGE_assets/stone-game-iii/leet-code-scrshot.png","LeetCode Stone Game III ကို ဒီ [Link](https://leetcode.com/problems/stone-game-iii/description/) မှာအရင်ဖတ်ကြည့်နိုင်ပါတယ်။","src/content/posts/solving-leetcode-stone-game-iii.mdx",[82],"assets/stone-game-iii/leet-code-scrshot.png","6a34e7c70f2d6593","the-wealth-of-knowledge",{"id":84,"data":86,"body":94,"filePath":95,"assetImports":96,"digest":98,"deferredRender":30},{"title":87,"createdAt":88,"description":89,"tags":90,"draft":92,"image":93},"The Wealth of Knowledge",["Date","2024-08-24T17:00:00.000Z"],"How knowledge gained streamlined your workflow",[91],{"id":77,"collection":64},false,"__ASTRO_IMAGE_assets/the-wealth-of-knowledge/03-ui.png","import { Image } from 'astro:assets';\nimport query from 'assets/the-wealth-of-knowledge/01-query.png';\nimport excel from 'assets/the-wealth-of-knowledge/02-excel.png';\nimport ui from 'assets/the-wealth-of-knowledge/03-ui.png';\n\nအရင်တုန်းက မရေးတတ်ခဲ့တဲ့၊ ရေးဖို့ကိုလည်းမဖြစ်နိုင်ဘူးလို့ ငြင်းထားခဲ့တဲ့ report query လေးတစ်ခု ဒီ weekend မှာရေးဖြစ်ခဲ့တယ်။ ရေးရတဲ့ query က အကြောင်း ၄၀ လောက်ပဲဆိုပေမယ့် အဲဒီမတိုင်ခင် ဖတ်ရမှတ်ရတာက တော်တော်များတယ်။\n\n\u003CImage src={ query } alt=\"Query\" height={query.height / 4 } />\n\n\u003CImage src={excel} alt=\"excel export\" height={ excel.height / 5 } />\n\nအရင်သွားတဲ့ပုံစံက\n- အလုပ်လုပ် (work on the project)\n- အခက်အခဲရှိရင် Google ရှာ၊ ChatGPT မေး (search or ask AI)\n- ရလာတဲ့အဖြေကို ရှိပြီးသား knowledge နဲ့ပေါင်းစပ်ပြီး အခက်အခဲဖြေရှင်း (solve problems based on existing knowledge and search results)\n\nဒီနည်းကတင်စားပြောရရင် တိမ်တိုက်ထဲလေယာဉ်မောင်းနေသလိုပဲ။ တိမ်တိုက်နဲ့တိုးမိရင် လေယာဉ်မှာ turbulance steam ရတတ်သလိုမျိုး။ အခက်အခဲတွေကို တည့်တည့်ဝင်တိုးပြီး ဖြေရှင်းလိုက်၊ အခက်အခဲခဏလောက် ရှင်းသွားလိုက်၊ မကြာဘူးပြန်ရောက်လာလိုက်နဲ့ အလုပ်လုပ်ရတာ turbulance တွေနဲ့ကြုံရတယ်။\nလေယာဉ်ကိုတိမ်တိုက်တွေထက်ပိုမြင့်တဲ့ altitude ဆီတက်ပြီးပျံမယ်ဆိုရင် လေထုသိပ်သည်းဆလျော့လာတာ၊ တိမ်တိုက်တွေလည်းနည်းလာတာကြောင့် ခရီးပိုတွင်သလို လောင်စာဆီလည်းသက်သာတယ်။\nအဲဒီလိုပဲ ကိုယ့်မှာရှိပြီးသား knowledge ကိုလည်း နေ့စဉ်လုပ်ငန်းမှာလိုအပ်တဲ့ knowledge ထက်ပိုမြင့်နေအောင်မြှင့်ထားနိုင်မှ အလုပ်ပိုတွင်မယ်။ သက်သက်သာသာနဲ့အလုပ်ပြီးမယ်။\nအလုပ်လုပ်ရတာ သက်သာတယ်ဆိုပေမယ့် အလုပ်လုပ်မနေတဲ့အချိန်မှာ စာချည်းထိုင်ဖတ်နေရတဲ့ အရင်းအနှီးကတော့ကြီးပါတယ်။ ပုံမှန် Google Search လောက်မှာမပါတဲ့အချက်အလက်တွေက စာအုပ်တွေထဲမှာပဲပါတာမို့ စာအုပ်တွေကိုအချိန်ပေးဖတ်ရတာမျိုးလည်းရှိပါတယ်။\nဒါပေမယ့် ပင်ပန်းခံပြီး အလုပ်လုပ်၊ စာမဖတ်ဘဲနေတာက ရေရှည်မှာအလုပ်ပြီးတာပဲရှိပြီး ကိုယ့်အတွက်မည်မည်ရရ ဘာမှမကျန်ခဲ့ပေမယ့် ပင်ပန်းခံပြီးစာဖတ်တာက အသိပညာတွေကျန်ခဲ့မှာပါ။","src/content/posts/the-wealth-of-knowledge.mdx",[97],"assets/the-wealth-of-knowledge/03-ui.png","b1b70d05abb0f037","modern-problems-require-modern-solutions",{"id":99,"data":101,"body":109,"filePath":110,"assetImports":111,"digest":113,"deferredRender":30},{"title":102,"createdAt":103,"description":104,"tags":105,"draft":92,"image":108},"Modern problems require modern solutions",["Date","2025-02-20T17:00:00.000Z"],"How you can catch up with the technology trend",[106],{"id":107,"collection":64},"thoughts","__ASTRO_IMAGE_assets/modern-problems/hype-cycle.svg","ခရီးသွားဟန်လွဲဖတ်ဖူးတဲ့စာတွေက ဘယ်နေရာအသုံးဝင်မလဲ မသိပေမယ့် ငြင်းကြခုံကြပြီဆိုရင် ပါးစပ်ထဲကရုတ်တရက်ထွက်ထွက်လာတယ်။ ပုံမှန်အချိန်ဆို သတိမရတဲ့ အချက်တွေကငြင်းပြီဆိုရင် ခုန်ပေါက်ထွက်လာကြတာမျိုး။\nဒီနေ့လည်း ငြင်းခုံရင်းထွက်လာတဲ့ quote နှစ်ခုရှိတယ်။\n>\u2028“Modern problems require modern solutions”.\n\nဒါကတော့ meme တွေမှာတွေ့နေကျ။ နည်းပညာစာအုပ်တစ်ခုမှာလည်း ဒါကို quote လုပ်ထားတာရှိတယ်။ ဘယ်စာအုပ်လဲတော့ အတိအကျမမှတ်မိတော့ဘူး။\nဒါနဲ့ဆက်စပ်ပြောရရင် **\"Legacy code is like paying rent on a property you don't live in anymore\"** ဆိုတဲ့ quote ကို programming နဲ့ပတ်သတ်တဲ့ discussion တွေမှာ မကြာခဏတွေ့ရတယ်။ Legacy code ဆိုတာ ခေတ်ဟောင်းနေတဲ့ code တွေပေါ့။ ပရိုဂရမ်းမင်းဘာသာစကား ဗားရှင်းအနိမ့်တွေတုန်းက ရေးထားခဲ့တဲ့ code တွေဟာ ဗားရှင်းအသစ်တွေထွက်လာရင် လိုက်ပြင်ရေးပေးဖို့လိုတယ်။ code မပြင်ချင်လို့ စနစ်သစ်ကို upgrade မလုပ်တာဟာ အရှိန်အဟုန်နဲ့ပြေးနေတဲ့ နည်းပညာလောကမှာ တော်တော်ကြီးပြတ်ကျန်ခဲ့တတ်တယ်။ system upgrade တော့လုပ်ပါရဲ့၊ code ဟောင်းတွေမပြင်ဘဲ system အသစ်မှာအလုပ်ဆက်လုပ်အောင် ကြားခံ code တွေထပ်ရေးပေးတာဟာလည်း လူမနေဘဲအိမ်ငှားခပေးနေရသလိုပါပဲ။\nဒီနေ့လို AI တွေမှိုလိုပေါက်အောင် ပေါများနေတဲ့ခေတ်မှာ နည်းပညာကိုအမီလိုက်ဖို့ဆိုတာ စိတ်ပါမှလုပ်ရတာမဟုတ်ဘဲ လုပ်ကိုလုပ်ရမယ့်ကိစ္စတစ်ခုဖြစ်လာတာပါ။ မြန်မာတိုင်းရင်းသားအဖွဲ့အစည်းတွေဟာ စစ်ပွဲတွေ၊ ပဋိပက္ခတွေကြားမှာ ဖြတ်သန်းခဲ့ရလို့ နယ်စပ်မျဉ်းနှစ်ဖက်စလုံးက ပြည်မတွေနဲ့ယှဉ်ရင် နည်းပညာအရ သိသိသာသာကိုနောက်ကျကျန်နေပါသေးတယ်။ ဒီလိုမဖွံ့ဖြိုးသေးတဲ့အခြေအနေမှာ နည်းပညာသုံးပြီးလုပ်ရတဲ့အလုပ်တွေကို အလုပ်ပိုလို့ယူဆမယ်ဆိုရင် ကွာဟချက်က ပိုပိုကြီးလာမှာပါ။ ခေတ်သစ်ရဲ့စိတ်ခေါ်မှုတွေကို ခေတ်သစ်နည်းပညာတွေနဲ့ ထိထိရောက်ရောက်ဖြေရှင်းပေးနိုင်ပါတယ်။\n\n> “People don’t know what they want until you show it to them.”\n\nဆိုတာ Steve Jobs ပြောခဲ့တာ။ နည်းပညာအသစ်တွေကိုမသုံးဖူးသေးရင် ဘာအကျိုးကျေးဇူးတွေရနိုင်လဲဆိုတာ မသိသေးဘူး။ စမ်းသုံးကြည့်တဲ့အခါ စစချင်းကြုံရတဲ့အခက်အခဲတွေကြောင့် မစမ်းသပ်ရဲကြတာလည်းပါတယ်။ ဥပမာပြောရရင် အခုတွင်တွင်ကျယ်ကျယ်သုံးနေကြတဲ့ Zoom ဟာ 2013 ကတည်းကရှိနေခဲ့တာပါ။ Google Meet ဆိုရင်လည်း 2017 ကတည်းထွက်နေခဲ့တာ။ Covid19 သာမရှိခဲ့ရင် Zoom လို video conferencing platform တွေကိုကျွန်တော်ကိုသုံးဖြစ်ချင်မှသုံးဖြစ်မှာပါ။ ဒါပေမယ့် ကိုဗစ်ကာလမှာ တဖွဲ့နဲ့တဖွဲ့တွေ့ကြဖို့ရာ ဒါတွေသုံးမှဖြစ်မှာမို့လို့ သုံးရင်းနဲ့ရင်းနှီးလာခဲ့ကြတာပါ။\n\nဒါဆိုအသစ်ပေါ်တိုင်းလိုက်သုံးရမှာလား။ ကိုယ့်အဖွဲ့အစည်းရဲ့ အရင်းအမြစ်တော်တော်များများကို နည်းပညာလုပ်ငန်းတွေမှာ ရင်းနှီးထားရမှာလား?\n\nနည်းပညာသစ်တွေကို ဘယ်အချိန်မှာရင်းနှီးမြှုပ်နှံရမလဲဆိုတာ ဆုံးဖြတ်နိုင်ဖို့ Gartner Hype Cycle ဆိုတာရှိပါတယ်။ နည်းပညာသစ်တွေရဲ့ ရေပန်းစားမှုကို အချိန်နဲ့ယှဉ်ပြတဲ့မော်ဒယ်ပါ။ အဆင့်ငါးဆင့်ပါပါတယ်။\n\n![Gartner Hype Cycle](assets/modern-problems/hype-cycle.png)\n\n## စတွေ့ချိန် (Innovation Trigger)\nနည်းပညာသစ်စတင်မိတ်ဆက်ပြီး မီဒီယာစာမျက်နှာပေါ်ရောက်ကာစအဆင့်ဖြစ်ပါတယ်။ ဥပမာ AI ဆိုရင် ၁၉၅၀ ဝန်းကျင်ကတည်းက Turing test တွေနဲ့စခဲ့တာပါ။\n\n## အထင်အကြီးဆုံးအချိန် (Peak of inflated expectations)\nနည်းပညာသစ်အပေါ် လူတွေအရမ်းမျှော်လင့်လာတဲ့အဆင့်ဖြစ်ပါတယ်။ တကယ့်စွမ်းဆောင်ရည်ထက်ပိုမျှော်လင့်တတ်ကြတာ သဘာဝပါ။ မီဒီယာတွေမှာလည်း ပိုပိုသာသာချီးမွမ်းခန်းဖွင့်တတ်ကြပါတယ်။\n\n## စိတ်ပျက်ချိန် (Trough of disillusionment)\nထင်ထားသလောက်လည်းမဟုတ်တဲ့အချိန်မှာ လူတွေစိတ်ပျက်လာတတ်ပါတယ်။ မီဒီယာတွေမှာလည်း ဝေဖန်မှုတွေမြင့်တက်လာပြီး ရင်းနှိးမြှုပ်နှံမှုတွေ လျော့နည်းလာပါတယ်။\n\n## ပြန်အလွမ်းသင့်ချိန် (Slope of enlightenment)\nနည်းပညာရဲ့ တကယ့်အသုံးဝင်ပုံနဲ့ အားသာချက်တွေကို ပိုနားလည်လာကြပါတယ်။ လက်တွေ့အသုံးချနိုင်တဲ့နည်းလမ်းတွေ ပေါ်လာပြီး လုပ်ငန်းကြီးတွေမှာလည်း ယုံယုံကြည်ကြည်လက်ခံကျင့်သုံးလာကြပါတယ်။\n\n## အတည်လက်တွဲသည့်အချိန် (Plateau of productivity)\nလူ့အဖွဲ့အစည်းဟာ နည်းပညာသစ်နဲ့အသားကျပြီး တည်တည်ငြိမ်ငြိမ်အသုံးဝင်နေပြီဖြစ်ပါတယ်။ စီးပွားရေးအရ အကျိုးအမြတ်တွေလည်းရှိနေပြီး လူအများလက်ခံအသုံးပြုကြတဲ့အဆင့်ပါ။\n\nဒီ Hype cycle ကိုကြည့်ရင် နည်းပညာသစ်တွေကို ဘယ်အချိန်မှာရင်းနှီးမြှုပ်နှံသင့်တယ်ဆိုတာ အထောက်အကူဖြစ်မှာပါ။ ဥပမာ အရမ်းဟော့နေတဲ့အချိန်မှာ ရင်းနှီးမြှုပ်နှံရင် အန္တရာယ်များနိုင်ပြီး လူအများစိတ်ပျက်နေတဲ့အချိန်မှာ ပေါချောင်ကောင်းဈေးနဲ့ ဝင်ရောက်လုပ်ကိုင်နိုင်ပါတယ်။\nအတိုချုပ်ပြောရင်ရင်တော့ ခုလိုအချိန်မျိုးမှာ AI နည်းပညာတွေကို အဖွဲ့အစည်း/လုပ်ငန်းကိုယ်စားပြု မသုံးဖြစ်သေးရင်တောင်မှ တစ်ဦးချင်းစမ်းပြီးသုံးသင့်နေပါပြီ။\n\nAI တွေမလုပ်ဖြစ်သေးရင်တောင်မှ အခြေခံအဆင့်တွေဖြစ်တဲ့ လုပ်ငန်းသုံးဒေတာတွေကို ဒစ်ဂျစ်တယ်ပုံစံနဲ့သိမ်းဆည်းဖို့၊ ရုံးသုံး project management platform တစ်ခုရှိဖို့၊ electronic signature သုံးဖို့၊ social media နဲ့တွဲနေတဲ့ messenger တွေမသုံးဘဲ Slack လို communication platform မျိုးသုံးဖို့ဆိုတာ မဖြစ်မနေဖြည့်ဆည်းထားရမယ့်ကိစ္စတွေဖြစ်ပါတယ်။","src/content/posts/modern-problems-require-modern-solutions.mdx",[112],"assets/modern-problems/hype-cycle.svg","2caa6b1aed488f25","starting-to-use-neovim",{"id":114,"data":116,"body":123,"filePath":124,"assetImports":125,"digest":127,"deferredRender":30},{"title":117,"createdAt":118,"description":119,"tags":120,"draft":92,"image":122},"Starting to use Neovim",["Date","2025-02-22T17:00:00.000Z"],"Why did I started to use Neovim",[121],{"id":107,"collection":64},"__ASTRO_IMAGE_assets/starting-to-use-neovim/neovim.png","import { Image } from 'astro:assets';\nimport nvim from 'assets/starting-to-use-neovim/neovim-ssh.png';\n\nပြီးခဲ့တဲ့အပတ်ကစပြီး Neovim စသုံးဖြစ်တယ်။ Neovim ဆိုတာအလွယ်ပြောရရင် Code Editor ပေါ့။ Mouse သုံးစရာမလိုဘဲ keyboard နဲ့ခိုင်းလို့ရတယ်။ ခလုတ်တွေမပါဘဲ စာသားချည်းသက်သက်။\n2025 မှာ coding agent တွေထွက်လာတယ်။ Windsurf ၊ Cursor ၊ Github Copilot နဲ့ free ထဲကသုံးလို့ကောင်းတာ Trae ရှိတယ်။ အရမ်းကောင်းတယ်။ အရင်ကထက် အလုပ်လုပ်ရတာ တော်တော်သွက်လာတယ်။ ဟိုတုန်းက ပရောဂျက်တစ်ခုအကြမ်းပြီးဖို့ သုံးလလောက်ကြာရင် AI coding assistant တွေနဲ့ တစ်လလောက်နဲ့ပြီးတယ်။ လိုချင်တဲ့ပုံစံကို AI ခိုင်းလိုက်ရင် ချက်ချင်းထွက်လာတယ်။ Coding agent ကပြတဲ့ဟာကို copy paste လုပ်ဖို့တောင်မလိုဘူး၊ သူ့ဘာသာသူဝင်ရေးသွားတာ။ Error တက်ရင်လည်း error message click နှိပ်ရုံနဲ့ AI chat ထဲမေးပြီးသားဖြစ်နေတယ်။ Claude mcp server နဲ့ဆိုရင် သူ့ဘာသာဝင်ရေးပြီး Git push တောင်ဝင်လုပ်သွားသေးတယ်။\n\nခက်တာက AI ကိုအလွန်အမင်းမှီခိုလာမိတာပဲ။ AI ရေးပေးတဲ့ code ကို အကြမ်းဖျဉ်းတစ်ခေါက်စစ်ကြည့်တယ်။ Run လို့အဆင်ပြေတယ်၊ လိုချင်တဲ့အတိုင်းရပြီဆို လွှတ်ထားလိုက်တာပဲ။ တခါတလေ ကိုယ်ရေးမယ်စဉ်းစားထားတဲ့ပုံစံအတိုင်းမဟုတ်ဘဲ စီနီယာတစ်ယောက်လိုတောင် စနစ်တကျရေးပေးသွားသေးတယ်။ ဒီအထိအားလုံးအဆင်ပြေတယ်။ အလုပ်အပ်တဲ့ဆီ အကြမ်းဗားရှင်းပြန်ပြရင်လည်း မဆိုးဘူး၊ ရုပ်လုံးတော့ပေါ်လာပြီ။ Minimum viable product (MVP) လို့ခေါ်ကြတယ်။\n\nတခြားမှာတော့မသိပေမယ့် အခုအလုပ်လုပ်တဲ့ပတ်ဝန်းကျင်မှာ MVP အဆင့်ကိုမြန်မြန်ရောက်အောင်သွားရတယ်။ လူအင်အားနည်းနည်း၊ အရင်းအနှီးကျစ်ကျစ်လစ်လစ်နဲ့ အလုပ်ဖြစ်တဲ့ product တစ်ခု အချိန်တိုအတွင်းထွက်ဖို့လိုတာမျိုး။ ရုပ်လုံးပေါ်တဲ့အဆင့်မှာ ပြကြည့်။ မကြိုက်တာဖြုတ်၊ လိုချင်တာထပ်ထည့်။ အလုပ်အပ်တဲ့ဆီမှာလည်း အဲဒီလောက်ရုပ်လုံးပေါ်တဲ့အချိန်ပြမှ ဒါမျိုးမလိုချင်ဘူး၊ ဘယ်ဟာကိုတော့ဒီလိုလေးထပ်ပြင်ဖို့လိုတယ် စသဖြင့် input လေးစရတယ်။ အဲဒီမတိုင်ခင်တော့ သူတို့လည်းကိုယ့်ဘာသာကိုယ်ဘာလိုချင်မှန်းမသိသေးဘူး။ ကိုယ်လည်းသူတို့အကြိုက်မခန့်မှန်းတတ်သေးဘူး။\nAI ကိုအလွန်အမင်းမှီခိုထားရင် ဒီအဆင့်မှာပြဿနာစတယ်။ အလုပ်အပ်တဲ့ဆီက ထပ်ထည့်ချင်တဲ့ function က တော်တော်လေးအသေးစိတ်ပြီး AI လည်းမလုပ်တတ်တဲ့ဟာမျိုးဆိုရင် ဘယ်ကစလုပ်ရမှန်းမသိတော့ဘူး။ မျက်စိရှေ့မှာ code တွေတော့မြင်နေရတယ်။ ဒါပေမယ့် ဘယ်နေရာမှာကြားဖြတ်ပြီး feature အသစ်ကိုစထည့်ရမလဲ မစဉ်းစားတတ်တော့တာမျိုး။ ဘာလို့လဲဆိုတော့ AI ရေးပေးတဲ့ code ကို ဪ ဒီလောက်ကငါလည်းရေးတတ်တယ်၊ သူရေးပေးတော့အမြန်ပြီးတာပေါ့ဆိုပြီး ကူးထည့်လိုက်တာ။ Error ပေါ်ရင်လည်းသူ့ပဲမေးပြီး သူပြောတဲ့အတိုင်းရှင်းလိုက်တာဆိုတော့ ဘာကြောင့် error ပေါ်လဲ၊ ဘာလို့ဒီလိုရှင်းလိုက်ရင် ပြန်ပျောက်သွားတာလဲ မသိတော့ဘူး။\n\nရုပ်လုံးပေါ်တဲ့အဆင့် (Minimum viable product) လောက်က ခုဆို AI တော်တော်များများရေးပေးတတ်နေပြီ။ ဒါပေမယ့်အဲဒီအဆင့်ကျော်လွန်ပြီး feature အသစ်တွေစထည့်တဲ့ခါမှာ တလွဲတွေစလုပ်တယ်။ အဓိကအားနည်းချက်က context ကိုမမှတ်မိတာပဲ။ တစ်ချိန်တည်းမှာ ဖိုင်အများကြီးကိုကြည့်ပြီး သူတို့အချင်းချင်းဘယ်လိုဆက်စပ်အလုပ်လုပ်နေလဲဆိုတာ နားမလည်ဘူး။ ဆက်ရေးလေ မှားလေ၊ နဂိုအလုပ်လုပ်ပြီးသား code တွေပျက်လေဖြစ်တတ်တယ်။ လူကိုယ်တိုင်လည်း ဘယ်ကအစပြန်ကိုင်ရမှန်းမသိတော့လို့ အစကမရေးရရုံတမယ် ပြန်ပြင်ရေးရတယ်။ ကိုယ်တိုင်အစအဆုံးနီးပါးပြန်ပြင်ရေးပြီးတဲ့အခါ codebase ကို ကိုယ်ပိုင်တယ်လို့ခံစားလာရတယ်။ တစ်ကြောင်းချင်းစီကော ခြုံငုံပြီးတော့ကော ပြန်ကြည့်ရင်မှတ်မိတယ်။ testing လုပ်ကြည့်လို့ bug တွေ့ရင်တောင်မှ code ကိုမကြည့်ရသေးဘူး၊ ဒါဘယ်လိုင်းမှာဖြစ်တာလဲဆိုတာ ချက်ချင်းမှန်းနိုင်လာတယ်။\n\n\u003CImage src={ nvim } alt=\"Neovim Editor\" height={ nvim.height/4 } />\n\nဒီလိုနဲ့ Neovim ကိုကြိုးစားပြီးသုံးကြည့်တယ်။ AI agent တွေတွင်တွင်ကျယ်ကျယ်သုံးနိုင်တဲ့ code editor တွေမှာ ကိုယ်မရေးခင်ကြိုကြိုပြနေတာကို မျက်စိရှုပ်တယ်လို့ခံစားရလို့လည်းပါတယ်။ စဉ်းစားတတ်တဲ့အလေ့အကျင့်ကို ချိုးနှိမ်ထားတာနဲ့တူတယ်လို့ စိုးရိမ်လာတယ်။ ကြာလာရင်ဉာဏ်တိမ်သွားမှာစိုးတယ်။\nVisual Studio Code ကနေ Neovim ပြောင်းကာစက တော်တော်ခက်တယ်။ mouse မသုံးရဘဲ key တွေနဲ့ စာစီစာရိုက်လုပ်ရသလိုမျိုးဆိုတော့ စစချင်းအလုပ်မတွင်ဘူး။ နောက်ရက်တွေကျမှ mouse ကိုသွားသွားမရွှေ့ဘဲ keyboard ကနေအလုပ်လုပ်တာဟာ အာရုံပိုစူးစိုက်နိုင်တာသတိထားမိတယ်။ တစ်ကြောင်းချင်းစီကိုယ်တိုင်ရေးရတာဆိုတော့ PHP class မှာ namespace ကြေငြာတာမျိုးကအစ ကိုယ်တိုင်ရိုက်တယ်။ namespace resolve လုပ်ဖို့ use တာတောင် plugin မသုံးဘဲ စာရိုက်ပြီး use ရတာဆိုတော့ code တစ်ကြောင်းချင်းစီကို ကိုယ်ပိုင်တယ်လို့ခံစားရတယ်။ တဖြည်းဖြည်းနဲ့ key တွေအလွတ်မှတ်ဖို့မလိုတော့ဘဲ muscle memory နဲ့မှတ်မိလာလို့ အလုပ်ပိုတွင်လာတယ်။\n\nတစ်ချိန်ချိန်တော့ VSCode ပြန်သုံးဖြစ်ချင်သုံးဖြစ်မယ်။ AI agent တွေလည်းပြန်သုံးဖို့လိုကောင်းလိုလာမှာပါပဲ။ ဒါဟာ AI လုံးဝမသုံးသင့်ဘူးလို့ပြောတာမဟုတ်ဘဲ tool တစ်ခုအနေနဲ့သုံးသင့်တယ်လို့ ဆိုလိုတာ။ AI က ကိုယ့်ကိုခိုင်းတာမဟုတ်ဘဲ ကိုယ်က AI ကိုခိုင်းတတ်ဖို့ပဲမို့လား။","src/content/posts/starting-to-use-neovim.mdx",[126],"assets/starting-to-use-neovim/neovim.png","5c1a5dad43f14ef6","vps-lamp-setup-01-introduction",{"id":128,"data":130,"body":138,"filePath":139,"assetImports":140,"digest":142,"deferredRender":30},{"title":131,"createdAt":132,"description":133,"tags":134,"draft":92,"image":137},"Setting up LAMP stack and deployment on a VPS",["Date","2025-03-05T17:00:00.000Z"],"01-Introduction",[135],{"id":136,"collection":64},"vps-setup","__ASTRO_IMAGE_assets/vps-setup/terminal.png","import { Image } from 'astro:assets';\nimport ssh from 'assets/vps-setup/ssh-access.png';\n\n## Introduction\nWeb application တွေ deploy လုပ်ဖို့ဆိုရင် terminal access ရနိုင်တဲ့ Cloud hosting ၊ VPS ၊ Dedicated hosting စသည်ဖြင့်လိုအပ်ပါတယ်။ Shared hosting တွေက ဈေးသက်သာပေမယ့် Terminal သုံးလို့မရတာ၊ ရရင်လည်း SSH access ကို Putty လို client တွေကနေဝင်သုံးရတာတွေကြောင့် setup လုပ်ရတာလက်ဝင်ပါတယ်။ ကွန်ပြူတာထဲက ပရောဂျက်ကို Shared hosting ဆာဗာပေါ်တင်ရင်လည်း FTP client တွေကနေတင်ရလေ့ရှိတာမို့ တစ်ခုခု update လုပ်ဖို့ရှိရင် ဆာဗာပေါ်ကို upload လုပ်ဖို့အချိန်ကြာပါတယ်။\n\nVirtual Private Server (VPS) ဝယ်သုံးရင် Terminal access တွဲလျက်ပါလို့ git repo ကနေ project deploy လုပ်ရတာ၊ terminal command တွေနဲ့ cron job တွေ run နိုင်တာကြောင့် ခေတ်ပေါ် web development နည်းပညာတွေအတွက် ပိုသင့်တော်ပါတယ်။ VPS မှာ Webhost Manager (WHM) နဲ့ cPanel ထည့်ဝယ်လို့ရသလို ဘာမှမထည့်ဘဲ ဗလာကနေ စပြီး setup လုပ်လို့လည်းရပါတယ်။\n\nWHM နဲ့ cPanel တွေသုံးမယ်ဆိုရင် လိုင်စင်ကြေးပေးရပါတယ်။ ဝယ်သုံးလိုက်ရင်တော့ setup လုပ်ရတာသက်သာပါတယ်။ cPanel ဝယ်လိုက်ရင် Linux Apache MySQL PHP (LAMP) ပါပြီးသားမို့လို့ လက်တင်သုံးရုံပါပဲ။ ဗလာပဲဝယ်ရင်တော့ Shared hosting ဈေးနဲ့သိပ်မကွာတော့ဘဲ Terminal ကနေ SSH access နဲ့ အစအဆုံး setup လုပ်ရပါတယ်။\n\nဒီစာအုပ်မှာတော့ ဈေးသက်သာတဲ့ Namecheap hosting ကနေ VPS ကို အခွံပဲဝယ်ပြီး LAMP stack setup လုပ်ပုံနဲ့ project deployement လုပ်ပုံကိုဖော်ပြထားပါတယ်။ ဒီလို terminal ကနေ အစအဆုံး setup လုပ်တတ်တဲ့အလေ့အကျင့်ရှိထားရင် DevOps အနေနဲ့အသက်မွေးတဲ့အခါမှာလည်း အထောက်အကူဖြစ်စေမှာပါ။ VPS setup လုပ်တဲ့အခြေခံ concept တွေဟာ AWS, Google Cloud, Azure တို့လို့ cloud platform တွေမှာပါ ဆက်သုံးလို့ရတာကြောင့် Linux command တွေကို ဦးနှောက် memory မှာသာမက လက်ချောင်းတွေကပါ အလိုလိုမှတ်မိနေတဲ့ muscle memory အဆင့်ရောက်အောင် လေ့ကျင့်ထားသင့်ပါတယ်။\n\n## VPS shell access\n\nVPS ဝယ်တဲ့အသေးစိတ်ကိုတော့ မရေးပြတော့ဘဲ Login ဝင်တာကနေပဲ စလိုက်ရအောင်ပါ။ ဒီစာအုပ်မှာ Namecheap ကိုပဲ ပြသွားတာဆိုပေမယ့် တခြား VPS hosting တွေမှာလည်း သဘောတရားချင်းအတူတူပဲဖြစ်ပါတယ်။ VPS ဝယ်လိုက်ပြီဆိုတာနဲ့ အောက်ပါ အချက်အလက်တွေရပါမယ်\n\n- IP address\n- VPS Panel address\n- VPS panel username and password (hosting ကုမ္ပဏီ website မှာဝင်ရတဲ့ account နဲ့ မတူပါဘူး)\n- SSH IP address\n- SSH port\n- SSH username\n- SSH temporary password\n\n>VPS setup ကို အနည်းဆုံးနှစ်နေရာကနေ ဝင်လုပ်လို့ရတယ်။\n>- VPS panel မှာပါတဲ့ browser VNC client ကနေဝင်တာ\n>- ကွန်ပြူတာရဲ့ Terminal ကနေ SSH access နဲ့ဝင်တာ\n\nVNC client က browser ကသွားရတာမို့လို့ နည်းနည်း lag ဖြစ်ပြီးသုံးရတာလက်ဝင်တာကြောင့် Terminal SSH login နဲ့ပဲသွားကြည့်ပါမယ်။ အကြောင်းအမျိုးမျိုးကြောင့် SSH access မရခဲ့ရင်လည်း VPS panel ရဲ့ VNC client ကနေလုပ်လို့ရပါတယ်။\n\nLinux, Mac တို့ရဲ့ Terminal သုံးလို့ရ၊ Windows 11 ရဲ့ Terminal လည်းရပါတယ်။\n\n## SSH login via Terminal\nကွန်ပြူတာရဲ့ terminal မှာ SSH login ဝင်ကြည့်ပါမယ်။ username နဲ့ ipaddress မှာ SSH username, ipaddress နဲ့အစားထိုးပါ။ ဥပမာ `root@203.0.113.0`။\n```bash\nssh username@ipaddress\n```\n\"The authenticity of host ip address can't be established.\nRSA key fingerprint is SHA256:key.\nThis key is not known by any other names.\nAre you sure you want to continue connecting (yes/no/[fingerprint])?\"\nပေါ်လာရင် `yes` ထည့်ပြီး Enter နှိပ်ပါ။\n\nပြီးရင်နောက်တစ်ခေါက် SSH login ဝင်ကြည့်ပါ။\n\nPassword တောင်းရင် password ထည့်ပေးပါ။ password ထည့်နေတာကို မြင်ရမှာမဟုတ်ပါဘူး။ ရိုက်ထည့်ပြီးရင် enter နှိပ်ပါ။\n\nWelcome to Ubuntu လို့မြင်ရရင် SSH access ရပါပြီ။\n\n\u003CImage src={ ssh } alt=\"SSH\" height={ssh.height / 3 } />","src/content/posts/vps-lamp-setup-01-introduction.mdx",[141],"assets/vps-setup/terminal.png","6b67f953a48fe52b","vps-lamp-setup-02-system-update-user-management",{"id":143,"data":145,"body":150,"filePath":151,"assetImports":152,"digest":153,"deferredRender":30},{"title":131,"createdAt":146,"description":147,"tags":148,"draft":92,"image":137},["Date","2025-03-06T17:00:00.000Z"],"02-System Update and User Management",[149],{"id":136,"collection":64},"import { Image } from 'astro:assets';\nimport sshd_config from 'assets/vps-setup/sshd_config.png';\nimport new_kernel from 'assets/vps-setup/new_kernel.png';\n\n## System Update\nSSH login ဝင်ပြီးပြီဆိုတာနဲ့ အရင်ဆုံး linux OS ကို update လုပ်ပါမယ်။ VPS provider က ပေးလိုက်တဲ့ linux image က update မဖြစ်တတ်လို့ပါ။\n\n```bash\nsudo apt update -y && sudo apt upgrade -y\n```\n\nတောက်လျှောက် `y` ဆိုတဲ့ option ကိုထည့်ပေးထားလို့ `Do you want to upgrade? [Y/n]` လိုမေးခွန်းတွေ အကုန်လုံးကို `y` အလိုလိုဖြေပြီး အလိုအလျောက် update တွေကို download လုပ်ပေးသွားပါလိမ့်မယ်။ internet connection ပေါ်မူတည်ပြီး ကြာနိုင်ပါတယ်။\n\nUpdate လုပ်ရင်း sshd_config ကို update လုပ်မလားမေးရင် **Keep the local version currently installed** ကိုရွေးပါ။\u003Cbr />\u003Cbr />\n\u003CImage src={ sshd_config } alt=\"SSHD Config\" height={sshd_config.height / 4 } />\nUpdate and upgrade လုပ်ရင်း Kernel အထိပါ upgrade ဖြစ်သွားရင်တော့ Reboot လုပ်ဖို့ပြောလာပါလိမ့်မယ်။ Ok ရွေးပြီး reboot လုပ်တာစောင့်ပါ။ SSH login ပြန်ဝင်ပါ။\n\u003CImage src={ new_kernel } alt=\"Kernel\" height={ new_kernel.height / 4 } />\n\n## Replacing Hostname\nပြီးရင် Domain name နဲ့ current hostname ကို ပြောင်းကြရအောင်။ SSH login ဝင်တိုင်း ကိုယ်သုံးမယ့် domain name ကိုမြင်ရတာမို့ နောက်ပိုင်း manage လုပ်ရတာအဆင်ပြေအောင်လို့ပါ။\n\n```bash\nsudo nano /etc/hostname\n```\nအဲဒီထဲမှာ `server1` စတာတွေပါမယ်။ အားလုံး ဖျက်ပြီး မိမိ domain name ကိုထည့်ပါ။\n\n```\nyourdomain.com\n```\n>nano editor မှာ Ctrl + O နဲ့ save လုပ်ပြီး Ctrl + X နဲ့ပြန်ထွက်လို့ရပါတယ်။\n\nပြီးရင် `/etc/hosts` ကိုလည်းပြောင်းပါမယ်။\n\n```bash\nsudo nano /etc/hosts\n```\n`[ip address]` လို့ရေးထားတဲ့နေရာမှာ VPS ip address ဖြစ်ပါမယ်။ သူနဲ့ `Tab` key တစ်ခုအကွာမှာ မိမိ domain name နဲ့အစားထိုးပေးပါ\n```bash\n127.0.0.1       localhost localhost.localdomain\n::1     localhost localhost.localdomain\n[ip address]    yourdomain.com\n```\n\n## User Management\nRoot user ရဲ့ power ဟာ တစ်ခုခုအမှားအယွင်းလုပ်မိရင် အဖျက်စွမ်းအားကြီးမားတာကြောင့် root ထက်လုပ်ပိုင်ခွင့်နည်းတဲ့ user တစ်ဦးလုပ်ထားသင့်ပါတယ်။ သူ့ကို sudo နဲ့ဖြည့်ပေးထားပြီး အဲဒီကနေတဆင့် root လုပ်ပိုင်ခွင့်တောင်းတာမျိုးက ဆာဗာ security ပိုကောင်းစေပါတယ်။\n\n`username` မှာ မိမိနာမည်အစားထိုးပါ။\n\n```bash\nadduser username\n```\nPassword နဲ့ confirm password ရိုက်ထည့်ပါ။ VPS password တွေမို့လို့ အလွယ်မပေးမိဖို့ ဂရုစိုက်ပါ။ ( Full name, Room number စတဲ့ optional အပိုင်းတွေကိုတော့ `Enter` နဲ့ skip လုပ်သွားလို့ရပါတယ်)။ ပြီးရင် sudo group ထဲထည့်ပါမယ်။\n\n```bash\nadduser username sudo\n```\n\nပြီးရင် user အသစ်နဲ့ ဝင်ကြည့်ပါမယ်။\n\n```bash\nsu username\n```\nuser account ပြောင်းသွားတာကို သတိထားမိမှာပါ။ ဒီနေရာမှာ root user ဘက်ကိုပြန်သွားကြည့်ရအောင်\n```bash\nexit\n```\nထွက်လိုက်ပြီဆိုရင် root user ဆီပြန်ရောက်သွားမှာပါ။ ဒီလို ကိုယ့် username ကနေ exit နဲ့ထွက်လိုက်တိုင်း root ဆီပြန်ရောက်သွားတာမျိုးမဖြစ်ရအောင် root login ပိတ်ထားဖို့လိုပါတယ်။ Root login ပိတ်ထားခြင်းအားဖြင့် security လည်းကောင်းစေပါတယ်။\n\n`/etc/ssh/sshd_config` ကိုဖွင့်ပြီး root login ကိုပိတ်လိုက်ပါမယ်။\n\n```bash\nsudo nano /etc/ssh/sshd_config\n```\n`PermitRootLogin yes` ကနေ `PermitRootLogin no` ဆိုပြီး root login ကိုပိတ်လိုက်ပါမယ်။ နဂိုက comment အနေနဲ့ `#PermitRootLogin` လိုပါနေတာမျိုးဆိုရင် `#` ကိုဖျက်ပြီး comment ဖြုတ်လိုက်ပြီး `PermitRootLogin no` ဆိုပြီးပြင်ပေးပါ။ File ကို Ctrl + O နဲ့သိမ်း၊ Ctrl + X နဲ့ထွက်ပြီး SSH service ကို restart ချပါမယ်။\n\n```bash\nsudo systemctl restart sshd\n```\n\nဆာဗာကို restart ပါမယ်။\n\n```bash\nsudo reboot\n```\nReboot ပြီးသွားရင် root account နဲ့ဝင်လို့မရအောင် ပိတ်ထားပြီးဖြစ်လို့ username နဲ့ဝင်ရပါမယ်။\n\n```bash\nssh username@ipaddress\n```\nuser အသစ်ဖန်တီးတုန်းက နှစ်ခါရိုက်ထည့်ပြီးပေးထားတဲ့ password ကိုထည့်ပေးပါ။ မိမိ username နဲ့ hostname ပြောင်းပြီး login ဝင်သွားတာကို မြင်ရပါမယ်။","src/content/posts/vps-lamp-setup-02-system-update-user-management.mdx",[141],"ef7e55950884f253","vps-lamp-setup-03-install-lamp",{"id":154,"data":156,"body":161,"filePath":162,"assetImports":163,"digest":164,"deferredRender":30},{"title":131,"createdAt":157,"description":158,"tags":159,"draft":92,"image":137},["Date","2025-03-06T17:00:00.000Z"],"03-LAMP stack Installation",[160],{"id":136,"collection":64},"import { Image } from 'astro:assets';\nimport apache2_default from 'assets/vps-setup/apache2_default.png';\n\nUser ထည့်ပြီးရင် LAMP stack သွင်းလို့ရပါပြီ\n\n## LAMP Stack Setup\nLAMP = Linux + Apache + MySQL + PHP ဆိုတဲ့ stack ကို ထည့်ပါမယ်။ ဒီစာအုပ်မှာ Laravel project ကို နမူနာအနေနဲ့ deploy လုပ်ကြည့်ပါမယ်။ Linux Server က VPS မှာတခါတည်းပါလာပြီးသားဖြစ်တာကြောင့် သွင်းစရာမလိုတော့ပါဘူး။\n\n### Apache Installation\nApache2 server, documentation နဲ့ utility program တွေသွင်းပါမယ်\n```bash\nsudo apt install apache2 apache2-doc apache2-utils -y\n```\nInstall လုပ်တာပြီးတာနဲ့ apache2 service အလုပ် လုပ်/မလုပ် စစ်ကြည့်ပါမယ်\n\n```bash\nsystemctl status apache2\n```\nActive (running) ဆိုရင် apache2 သွင်းတာအဆင်ပြေပါပြီ။\n\nApache configuration ဆက်မလုပ်ခင် Ubuntu ရဲ့ Uncomplicated Firewall (UFW) ကို အရင် setup လုပ်ပါမယ်။ ufw Firewall အလုပ်လုပ်နေလား အရင်စစ်ကြည့်ရအောင်\n```bash\nsudo ufw status\n```\n```bash\nStatus: inactive\n```\nစစချင်းမှာ inactive လို့ပြနေပါလိမ့်မယ်။ ဒါကြောင့် Firewall setup လုပ်ပေးရပါမယ်။ လက်ရှိရနိုင်တဲ့ Firewall option တွေ ဘာတွေရှိလဲအရင်ခေါ်ကြည့်ပါမယ်\n\n```bash\nsudo ufw app list\n```\n```bash\n- Apache\n- Apache Full\n- Apache Secure\n- OpenSSH\n```\n>- **Apache** က Port 80 (HTTP) ကို ဖွင့်ထားပေးတာ\n>- **Apache Full** က Port 80 (HTTP) နဲ့ port 443 (HTTPS) နှစ်ခုလုံးကို ဖွင့်ထားပေးတာ\n>- **Apache Secure** က Port 443 (HTTPS) ကိုပဲဖွင့်ထားပေးတာ\n>- **OpenSSH** က Port 22 (SSH) ကို ဖွင့်ထားပေးတာ\n\nလောလောဆယ်တော့ SSL certificate မသွင်းရသေးတာကြောင့် \"Apache\" (HTTP port 80 only) ကိုပဲဖွင့်ထားလိုက်ပါမယ်။ Terminal ကနေ SSH နဲ့ဝင်တာကိုလည်း ခွင့်ပြုပေးအောင် OpenSSH ကိုလည်းဖွင့်ထားပါမယ်။\n\n```bash\nsudo ufw allow in \"Apache\"\nsudo ufw allow in \"OpenSSH\"\n```\nပြီးရင် Firewall ကို enable လုပ်ပါမယ်\n\n```bash\nsudo ufw enable\n```\nအလုပ် လုပ်/မလုပ် စစ်ကြည့်ပါမယ်\n\n```bash\nsudo ufw status\n```\nApache နဲ့ OpenSSH run နေတာကိုတွေ့နိုင်ပါတယ်။ ဒီအဆင့်ထိပြီးသွားရင် server ip ကို browser ကနေ ဝင်ကြည့်လို့ရပါပြီ။ Browser မှာ `http://server_ip` ရိုက်ထည့်ပြီးဝင်ကြည့်ပါ။ Apache2 Ubuntu Default Page မြင်ရပါမယ်။\n> server_ip ကို VPS panel နဲ့ Welcome email မှာပြန်ရှာကြည့်လို့ရပါတယ်။ SSL certificate မသွင်းရသေးလို့ HTTPS နဲ့ ဝင်လို့မရသေးပါဘူး\n\n\u003CImage src={ apache2_default } alt=\"Apache Default Page\" height={apache2_default.height / 4 } />\n\n### MySQL Installation\n\n```bash\nsudo apt install mysql-server -y\n```\n\nMySQL server သွင်းပြီးရင် root user password သတ်မှတ်ပေးရပါမယ်။ ဒီမှာပေးရတဲ့ password ဟာ VPS password နဲ့မဆိုင်ဘဲ mysql root user အတွက်သီးသန့် password ဖြစ်ပါတယ်။\n> VPS password နဲ့ MySQL root password ကိုမတူအောင်ပေးသင့်ပါတယ်။\n\n```bash\nsudo mysql\n```\n\nဝင်ပြီးရင် root user ကို password အသစ်ထည့်ပါမယ်။ password မှာ လုံခြုံမှုရှိတဲ့ password တစ်ခုနဲ့အစားထိုးပေးပါ\n\n```sql\nALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'password';\nexit\n```\n\nပြီးရင် mysql_secure_installation script ကို run ပါမယ်။\n\n```bash\nsudo mysql_secure_installation\n```\nmysql_secure_installation run လိုက်ရင် password တောင်းပါမယ်။ ဒီမှာထည့်ရတဲ့ password က VPS password ဖြစ်ပါတယ်။ mysql password မဟုတ်ပါဘူး။\nscript သွင်းလိုက်ရင် VALIDATE PASSWORD PLUGIN ကိုသုံးမလားမေးပါလိမ့်မယ်။ \n\n> - Level 0 = Low အနည်းဆုံး စာလုံး ၈ လုံး\n> - Level 1 = Medium အနည်းဆုံး စာလုံး ၈ လုံး၊ ဂဏန်းတွေပါ၊ စာလုံးအကြီးအသေးရော၊ special character ပါရမယ်\n> - Level 2 = Strong level 1 နဲ့တူတူပဲ၊ တခုပိုသွားတာက dictionary ထဲက word ဖြစ်လို့မရဘူး\n\nအခုတော့ `1` ရိုက်ထည့်ပါမယ်။\n\nလက်ရှိ password strength ကို 0 ကနေ 100 scale နဲ့ပြပေးပါမယ်။ `Y` နှိပ်ပြီးဆက်သွားပါ။\n\nanonymous user remove လုပ်မလားမေးရင် `y` နှိပ်ပါ။\n\ndisable root login remotely မှာ `y` နှိပ်ပါ။\n\nremove test database မှာ `y` နှိပ်ပါ။\n\nreload privilege table မှာ `y` နှိပ်ပါ။\n\nဒါဆိုရင် MySQL server setup ပြီးပါပြီ။\n\n### PHP Installation\n\n```bash\nsudo apt install php libapache2-mod-php php-mysql -y\n```\n\nအသုံးများတဲ့ PHP extension တွေထပ်ထည့်ထားချင်ရင်\n\n```bash\nsudo apt install php-curl php-json php-cgi php-gd php-mbstring php-xml php-xmlrpc php-zip -y\n```\nphp install လုပ်ပြီးပြီဆိုရင် အောက်ပါ command နဲ့ version စစ်ကြည့်လို့ရပါတယ်။\n\n```bash\nphp -v\n```\n\n### Apache Virtual Host Setup\nApache က default အနေနဲ့ `/var/www/html` directory ကို serve လုပ်ပေးပါတယ်။ ဥပမာ `index.html` ကို `/var/www/html/index.html` ဆိုပြီးထားလိုက်ရင် website စာမျက်နှာအနေနဲ့မြင်ရပါပြီ။ Website တစ်ခုထဲအတွက်ဆိုရင် အဆင်ပြေပေမယ့် website အများအပြားအတွက်ဆိုရင် virtual hosting ဆိုတဲ့ Apache ရဲ့ feature ကိုသုံးရပါမယ်။\n\nပထမဆုံး ကိုယ့် website folder ကိုလုပ်ပါမယ်။ `yourdomain.com` နေရာမှာ ကိုယ့် website domain ထည့်နိုင်ပါတယ်။ လောလောဆယ် domain name မရှိသေးဘူး၊ ဒါမှမဟုတ် DNS record မထည့်ရသေးဘူးဆိုရင်တောင်မှ ရည်ရွယ်ထားတဲ့ domain name အတိုင်း folder ဆောက်လို့ရပါတယ်။\n\n```bash\nsudo mkdir -p /var/www/yourdomain.com/public_html\n```\n> တချို့က directory name မှာ period `.` ပါနေတာမကြိုက်ကြဘဲ `/var/www/domaincom` လို့ပေးတတ်ကြပါတယ်။ အလုပ်လုပ်ပုံချင်းအတူတူပဲမို့ ကိုယ့်အကြိုက်နဲ့ကိုယ် နာမည်ပေးလို့ရပါတယ်။\n\nLog နဲ့ backups folder တွေလည်းလုပ်ထားပါမယ်။\n\n```bash\nsudo mkdir -p /var/www/yourdomain.com/log\nsudo mkdir -p /var/www/yourdomain.com/backups\n```\n\nပြီးရင် folder ownership ကို ပြောင်းပါမယ်။\n\n```bash\nsudo chown -R $USER:$USER /var/www/yourdomain.com\n```\n\nဒါဆိုရင် ဒီ folder ထဲမှာ run တဲ့ command တွေကို sudo အမြဲထည့်ဖို့မလိုတော့ပါဘူး။ ဆက်ပြီး Apache ရဲ့ sites-available မှာ yourdomain.com.conf ဆိုတဲ့ file ကိုလုပ်ပါမယ်။\n\n```bash\nsudo nano /etc/apache2/sites-available/yourdomain.com.conf\n```\n\nအောက်ပါအတိုင်းထည့်ပါ။ yourdomain.com တွေမှာ ကိုယ့် domain name အစားထိုးပေးပါ။ လောလောဆယ် domain name နဲ့မချိတ်ရသေးလည်း ထည့်ထားလို့ရပါတယ်။\n\n```\n\u003CVirtualHost *:80>\n    ServerName yourdomain.com\n    ServerAlias www.yourdomain.com\n    DocumentRoot /var/www/yourdomain.com/public_html\n    ErrorLog /var/www/yourdomain.com/log/error.log\n    CustomLog /var/www/yourdomain.com/log/access.log combined\n\u003C/VirtualHost>\n```\n\nအခုဖန်တီးလိုက်တဲ့ Virtual host ကို enable လုပ်ပါမယ်။\n\n```bash\nsudo a2ensite yourdomain.com.conf\n```\n\nမူလ default site ကိုပိတ်ပါမယ်။ Apache သွင်းပြီးပြီးချင်း browser မှာ server ipaddress ရိုက်ထည့်လိုက်ရင် တွေ့ရတဲ့ default စာမျက်နှာကို ပိတ်ဖို့ဖြစ်ပါတယ်။\n\n```bash\nsudo a2dissite 000-default.conf\n```\n\nကျွန်တော်တို့ လက်ရှိလုပ်ပြီးသလောက် Apache config တွေမှာ error ရှိမရှိ test လုပ်ပါမယ်။\n\n```bash\nsudo apache2ctl configtest\n```\n```bash\nSyntax OK\n```\nError မရှိရင် apache ကို reload ပြန်လုပ်ပေးပါမယ်။\n\n```bash\nsudo systemctl reload apache2\n```\nဒီအဆင့်ရောက်ပြီဆို html ရေးပြီးစမ်းကြည့်လို့ရပါပြီ။ document root မှာ HTML ဖိုင်တစ်ခုထည့်လိုက်ပါမယ်။\n\n```bash\necho '\u003Ch1>Hello\u003C/h1>' > /var/www/yourdomain.com/public_html/index.html\n```\n\nBrowser ကနေ server IP address ကိုဝင်ကြည့်ရင် Hello ဆိုတာကိုမြင်ရပါလိမ့်မယ်။ လောလောဆယ် SSL certificate မသွင်းရသေးလို့ HTTPS နဲ့ဖွင့်လို့ရမှာမဟုတ်သေးပါဘူး။","src/content/posts/vps-lamp-setup-03-install-lamp.mdx",[141],"ca6d71e230c2fa72","vps-lamp-setup-04-security-enhancements",{"id":165,"data":167,"body":172,"filePath":173,"assetImports":174,"digest":175,"deferredRender":30},{"title":131,"createdAt":168,"description":169,"tags":170,"draft":92,"image":137},["Date","2025-03-08T17:00:00.000Z"],"04-Security Enhancements",[171],{"id":136,"collection":64},"## Security Enhancements\nအွန်လိုင်းဆာဗာရယ်လို့ရှိလာပြီဆိုရင် SSH password brute force attack တွေကို တချိန်မဟုတ်တချိန် ခံရတတ်ပါတယ်။ password ကိုလုံခြုံအောင်ပေးထားမယ်ဆိုရင် dictionary attack တွေ၊ brute force attack တွေကိုသိပ်ကြောက်စရာမလိုပေမယ့် brute force login attempt တွေ အကန့်အသတ်မရှိလုပ်ခံရရင် server memory usage များလာပြီး website run နေစေဖို့ မရှိမဖြစ်လိုတဲ့ apache service လိုမျိုး service တွေရပ်သွားတတ်ပါတယ်။ server reboot လုပ်လိုက်မှ၊ apache service restart လုပ်လိုက်မှပဲ website ပြန်တက်လာတတ်ပါတယ်။\n\nဒီလိုမဖြစ်ရအောင် Fail2ban လောက်အနည်းဆုံးသွင်းထားဖို့လိုပါတယ်။ မအောင်မြင်တဲ့ login attempt တွေခဏခဏလုပ်နေတဲ့ ip ကို ban ဖို့ဖြစ်ပါတယ်။\n\n```bash\nsudo apt install fail2ban\nsudo systemctl enable fail2ban\nsudo systemctl start fail2ban\n```\n> ပိုလုံခြုံမှုရှိအောင် Cloudflare နဲ့ ကာထားလို့ရပါတယ်။ free version မှာကိုပဲ SSL/TLS protocol ပေးသုံးထားလို့ SSL ဖိုးအကုန်မခံချင်ရင်၊ Let's Encrypt က SSL certificate လည်းမသုံးချင်ဘူးဆိုရင် Cloudflare SSL free tier မှာတင်ရနိုင်ပါတယ်။ Analytics လည်းပါလို့ site visitor monitor ပါလုပ်နိုင်မှာပါ။ ဒါပေမယ့် SSH access ကိုကျ tunnelling နဲ့ပဲရတော့တာမို့ tunnelling setup လုပ်ရင် ပိုက်ဆံပေးရပါတယ်။\n\nဒါဆိုရင် fail2ban ကအလုပ်လုပ်နေပါပြီ။ SSH config မှာ root login မပိတ်ရသေးရင် ပိတ်ပေးပါ။\n\n```bash\nsudo nano /etc/ssh/sshd_config\n```\n`PermitRootLogin` ကို `no` ပေးပါ။\n\n`MaxAuthTries` ကို `3` လောက်ပဲထားပါ။\n\nနောက်တစ်ဆင့်မှာတော့ SSH ကို password သုံးတာထက် SSH key pair သုံးတာက ပိုပြီးလုံခြုံတာမို့လို့ SSH key authentication ဆက်လုပ်ပါမယ်။\n\n## SSH Key Authentication\nMac နဲ့ Linux မှာ SSH key authentication ပြုလုပ်ပုံကိုအဓိကဖော်ပြပါမယ်။ Windows မှာတော့ Putty Client သုံးပြီး setup လုပ်နိုင်ပါတယ်။ Putty သုံးပုံသုံးနည်းလည်း အလွယ်တကူရှာဖတ်လို့ရတာမို့ Windows မှာလုပ်ရတဲ့အဆင့်တွေကို အသေးစိတ်မပြောတော့ပါဘူး။\n\nTerminal မှာ SSH login ဝင်ထားတုန်းပဲဆိုရင် `exit` command နဲ့ပြန်ထွက်ပါ။ local terminal ကိုပြန်ရောက်ပြီဆိုရင် အောက်ပါ command ကို run ပါ။\n\n```bash\nssh-keygen -t ed25519 -C \"youremail@example.com\"\n```\n\"youremail@example.com\" မှာ ကိုယ့်အီးမေးလ်ကိုထည့်ပါ။\n\nDefault directory မှာပဲသိမ်းပါ။ passphrase ခံမလားမေးရင် ဘာမှမထည့်တော့ဘဲ Enter နှိပ်ပါ။ ပြီးရင် ssh-copy-id သုံးပြီး ဆာဗာပေါ်တင်ပါမယ်။\n\n```bash\nssh-copy-id username@ipaddress\n```\nusername နဲ့ ipaddress ဟာ SSH login ဝင်ရင်သုံးရတဲ့အတိုင်းဖြစ်ပါတယ်။ ဒီ command က Linux/Mac မှာပဲအလုပ်လုပ်တာမို့ Windows သုံးရင် Public Key ကို manual ကူးထည့်ပေးရပါမယ်။ \n\nဆာဗာပေါ်ကူးတင်ပြီးရင် login စမ်းဝင်ကြည့်ပါမယ်။\n\n```bash\nssh username@ipaddress\n```\nSSH key pair authentication အောင်မြင်တယ်ဆိုရင် password မတောင်းတော့ဘဲ login တန်းဝင်သွားပါလိမ့်မယ်။ အဆင်ပြေပြီဆိုရင် password login ကိုပိတ်လို့ရပါပြီ။ SSH configuration file ကိုဖွင့်ပါမယ်။\n\n```bash\nsudo nano /etc/ssh/sshd_config\n```\n\nပြီးရင် အောက်ပါတို့ကို ရှာပြီးပြင်ပါ\n```\nPasswordAuthentication no\nUsePAM no\n```\npassword authentication ကိုပိတ်လိုက်တာဖြစ်ပါတယ်။ ပြီးရင် ssh service ကို restart ပါမယ်။\n\n```bash\nsudo systemctl restart sshd\n```\n\nဒါဆိုရင် ဆာဗာကို SSH key နဲ့ပဲ ဝင်လို့ရတော့မယ်။ Password နဲ့ login ဝင်မရတော့ပါဘူး။ အပေါ်မှာတုန်းက generate လုပ်ခဲ့တဲ့ SSH key ဟာ default location မှာသိမ်းမယ်လို့ရွေးခဲ့တယ်ဆိုရင် public key ဟာ `~/.ssh/id_ed25519.pub` မှာရှိပါတယ်။ ကွန်ပြူတာထဲက public SSH key ကိုဖျက်လိုက်မိတယ်ဆိုရင် အသစ် generate ပြန်လုပ်လည်း VPS ဘက်ကနေ SSH login ပေးဝင်မှာမဟုတ်ပါဘူး။\n\n> ကွန်ပြူတာထဲက public SSH key ပျောက်ရင် VPS panel က VPC client ကိုဝင်ပြီး password login ပြန်ဖွင့်ပေးရပါမယ်","src/content/posts/vps-lamp-setup-04-security-enhancements.mdx",[141],"6b4ddcde15eb230b","vps-lamp-setup-05-laravel-deployment-setup",{"id":176,"data":178,"body":183,"filePath":184,"assetImports":185,"digest":186,"deferredRender":30},{"title":131,"createdAt":179,"description":180,"tags":181,"draft":92,"image":137},["Date","2025-03-08T17:00:00.000Z"],"05-Laravel deployment setup",[182],{"id":136,"collection":64},"## Laravel Deployment Setup\nပြီးခဲ့တဲ့အဆင့်တွေအတိုင်းလုပ်ပြီးပြီဆိုရင် PHP, MySQL သုံးတဲ့ ပရောဂျက်တွေ deploy လုပ်လို့ရပါပြီ။ Laravel project တွေအတွက်ဆိုရင်တော့ configure ဆက်လုပ်ရမှာလေးတွေရှိပါတယ်။\n\nLaravel သုံးဖို့လိုအပ်တဲ့ PHP modules တွေ ထပ်ထည့်ပါမယ်။ အသုံးများတဲ့ PHP module တွေထည့်ထားပြီးသားဆိုရင် ထပ်ထည့်ဖို့မလိုတော့ပါဘူး။\n\n```bash\nsudo apt install php-bcmath php-xml php-fpm php-zip php-intl php-mbstring php-curl php-mysql php-cli unzip -y\n```\n\nPHP ရဲ့ package manager ဖြစ်တဲ့ Composer သွင်းပါမယ်။\n\n```bash\ncurl -sS https://getcomposer.org/installer | php\nsudo mv composer.phar /usr/local/bin/composer\n```\n## Git Installation\n\nProject repo ကို clone လုပ်ဖို့ Git လိုအပ်ပါတယ်။\n\n```bash\nsudo apt install git -y\n```\n\n### Enable Apache rewrite module\nApache server ရဲ့ rewrite module ကိုဖွင့်ပေးပါမယ်။ ပြီးရင် ဆားဗစ် restart လုပ်ပေးပါ\n\n```bash\nsudo a2enmod rewrite\nsudo systemctl restart apache2\n```\n\n### Cloning your Laravel project\nဒီနမူနာမှာတော့ မိမိ Github က ရှိပြီးသား Laravel project တစ်ခုကို clone လုပ်တဲ့အပိုင်းကိုဖော်ပြသွားပါမယ်။\n\nDocument root ကိုသွားပြီး clone လုပ်ပါ။ `yourusername` နဲ့ `your-repo.git` မှာ မိမိ git username နဲ့ repo address အစားထိုးပေးပါ။\n\n```bash\ncd /var/www/yourdomain.com\ngit clone https://github.com/yourusername/your-repo.git public_html\n```\n> Git repo က public မဟုတ်ဘဲ private ဖြစ်နေမယ်ဆိုရင် HTTPS နဲ့ clone တဲ့အခါ email နဲ့ password တောင်းပါလိမ့်မယ်။ အဲဒီအခါ password မှာ github account ရဲ့ password မဟုတ်ဘဲ github account authentication token ကိုထည့်ပေးရမှာပါ\n\n> Git repo ကို SSH နဲ့ clone မယ်ဆိုရင်တော့ git operation တိုင်းမှာ login လုပ်ဖို့မလိုတော့ပါဘူး။ SSH နဲ့ clone လို့ရအောင် ကိုယ့်ကွန်ပြူတာမှာ SSH key pair generate လုပ်တုန်းကလိုပဲ VPS ပေါ်မှာ generate လုပ်လို့ရပါတယ်။ VPS ရဲ့ public key ကို github account settings ထဲက SSH and GPG keys မှာသွားထည့်လိုက်ရင် နောက်ပိုင်းအလုပ်မရှုပ်တော့ပါဘူး။\n\n### Environment setup\nLaravel ပရောဂျက်ရဲ့ `.gitignore` ထဲကအတိုင်းပဲ Git repo မှာတင်ထားလိုက်ပြီဆိုရင် `.env`၊ `node_modules` နဲ့ `vendor` folder တွေမပါလာတော့ပါဘူး။ clone လုပ်ယူလိုက်တဲ့နေရာအသစ်မှာ ပြန် install လုပ်ယူရပါမယ်။\n\nအရင်ဆုံး `.env.example` ကို `.env` အဖြစ် ကော်ပီယူပါမယ်။\n\n```bash\ncd /var/www/yourdomain.com/public_html\ncp .env.example .env\n```\n\nပြီးရင် .env file ကိုဖွင့်ပြီး database settings တွေပြင်ဆင်ပါမယ်။\n\n```bash\nnano .env\n```\n\nအဓိကပြောင်းရမှာတွေက အောက်ပါအတိုင်းဖြစ်ပါတယ်။ ကိုယ့်ဆာဗာရဲ့တန်ဖိုးတွေနဲ့ပြန်အစားထိုးပေးပါ။ လောလောဆယ် MySQL မှာ Laravel project အတွက်သီးသန့် database နဲ့ user မလုပ်ပေးရသေးပေမယ့် database နာမည်အသစ်နဲ့ user, password အသစ်တစ်ခုစီအရင်ထည့်ပေးထားပါ။ ခဏနေရင် mysql cli မှာဆက်လုပ်ပါမယ်။\n\n```\nAPP_NAME=\"Your App Name\"\nAPP_ENV=production\nAPP_DEBUG=false\nAPP_URL=https://yourdomain.com\n\nDB_CONNECTION=mysql\nDB_HOST=127.0.0.1\nDB_PORT=3306\nDB_DATABASE=yourdatabase\nDB_USERNAME=dbusername\nDB_PASSWORD=dbpassword\n```\n\n### Creating a database and user for Laravel project\nLaravel project သုံးဖို့ database တစ်ခုတည်ဆောက်ပေးပါမယ်။ အဲဒီ database အတွက်လည်း db user တစ်ယောက်ထပ်လုပ်ပေးပါမယ်။ mysql root db user ရှိပြီးသားဆိုပေမယ့် best practice တွေအရ နေရာတိုင်းမှာ root user မသုံးဘဲ database တစ်လုံးကို user တစ်ယောက်စီထားတာ ပိုကောင်းပါတယ်။\n\nအရင်ဆုံး MySQL login ဝင်ပါမယ်။\n\n```bash\nsudo mysql -u root -p\n```\npassword တောင်းရင် myql root user password ထည့်ပေးပါ။ VPS root user password မဟုတ်ပါဘူး။\n\nပြီးရင် database နဲ့ user တွေလုပ်ပါမယ်။ `yourdatabase`, `dbusername`, `dbpassword` တွေမှာ တန်ဖိုးအသစ်တွေထည့်ပေးပါ။\n\n```sql\nCREATE DATABASE yourdatabase;\nCREATE USER 'dbusername'@'localhost' IDENTIFIED BY 'dbpassword';\nGRANT ALL PRIVILEGES ON yourdatabase.* TO 'dbusername'@'localhost';\nFLUSH PRIVILEGES;\nEXIT;\n```\n\n### Installing composer dependencies\n\n```bash\ncd /var/www/yourdomain.com/public_html\ncomposer install --no-dev --optimize-autoloader\n```\n\n### Generate App key\n\n```bash\nphp artisan key:generate\n```\n\n### Prapare Laravel storage\n\n```bash\nphp artisan storage:link\n```\n\n### Database Migration\n\n```bash\nphp artisan migrate\n```\n\n### Laravel Permissions\nLaravel project ရဲ့ asset file ၊ cache file တွေကို apache server ကခေါ်သုံးခွင့်ရှိအောင် permission ဖွင့်ပေးရပါမယ်။\n\n```bash\nsudo chown -R www-data:www-data /var/www/yourdomain.com/public_html/storage\nsudo chown -R www-data:www-data /var/www/yourdomain.com/public_html/bootstrap/cache\nsudo chmod -R 775 /var/www/yourdomain.com/public_html/storage\nsudo chmod -R 775 /var/www/yourdomain.com/public_html/bootstrap/cache\n```\n\n### Configure Apache to serve public folder\nလောလောဆယ်မှာ project folder တစ်ခုလုံးကို public_html နာမည်နဲ့ clone ထားတာဖြစ်ပါတယ်။ ဒါပေမယ့် browser မှာဖွင့်လိုက်မယ်ဆိုရင် public folder ထဲက ဖိုင်တွေကိုပဲ serve လုပ်ပေးချင်တာဖြစ်ပါတယ်။ ဒါကြောင့် apache configuration မှာ project ထဲက public folder ကို serve လုပ်ပေးဖို့ညွှန်ပြပေးရပါမယ်။\n\n```bash\nsudo nano /etc/apache2/sites-available/yourdomain.com.conf\n```\n\nပြီးရင် public ဖိုလ်ဒါကို point လုပ်အောင် ပြင်ဆင်ပါမယ်။\n\n```\n\u003CVirtualHost *:80>\n    ServerName yourdomain.com\n    ServerAlias www.yourdomain.com\n    DocumentRoot /var/www/yourdomain.com/public_html/public\n    \n    \u003CDirectory /var/www/yourdomain.com/public_html/public>\n        Options Indexes FollowSymLinks\n        AllowOverride All\n        Require all granted\n    \u003C/Directory>\n    \n    ErrorLog /var/www/yourdomain.com/log/error.log\n    CustomLog /var/www/yourdomain.com/log/access.log combined\n\u003C/VirtualHost>\n```\n\nပြီးရင် Apache ကို reload လုပ်ပါမယ်။\n\n```bash\nsudo systemctl reload apache2\n```\n\n### Laravel Caching\nOptimization အတွက် caching လုပ်ပါမယ်။\n\n```bash\nphp artisan config:cache\nphp artisan route:cache\nphp artisan view:cache\n```\n\n### Set server timezone\nနောက်ပိုင်းမှာ cron job တွေ run ဖို့ရှိတာ၊ time-sensitive ဖြစ်တဲ့စာမျက်နှာတွေထည့်ချင်တာမျိုးမှာ ဆာဗာနာရီကို မိမိ target user အများစုသုံးတဲ့ timezone အတိုင်းချိန်ညှိပေးဖို့လိုပါတယ်။\n\n```bash\nsudo timedatectl set-timezone Asia/Yangon\n```","src/content/posts/vps-lamp-setup-05-laravel-deployment-setup.mdx",[141],"5357a4d889d22496","vps-lamp-setup-06-domain-dns-ssl-setup",{"id":187,"data":189,"body":194,"filePath":195,"assetImports":196,"digest":197,"deferredRender":30},{"title":131,"createdAt":190,"description":191,"tags":192,"draft":92,"image":137},["Date","2025-03-08T17:00:00.000Z"],"06-Domain DNS and SSL setup",[193],{"id":136,"collection":64},"## Domain Setup and DNS Configuration\nDomain name အတွက် DNS record တွေထည့်သွင်းတဲ့အဆင့်တွေဟာ VPS terminal ထဲမှာလုပ်ဖို့မလိုတော့ပါဘူး။ ကိုယ့် domain name registrar ရဲ့ DNS configuration ထဲမှာဆက်လုပ်ပေးရမှာဖြစ်ပါတယ်။\n\nDomain name regstrar တိုင်းမှာ Advanced DNS management ပါလေ့ရှိပါတယ်။ တချို့ဝန်ဆောင်မှုတွေမှာတော့ DNS management ကို ကိုယ်တိုင်ဝင်လုပ်လို့မရဘဲ service agent ကိုဆက်သွယ်ပြီး လိုချင်တဲ့ DNS record ကို မက်ဆေ့ပို့ပေးရပါတယ်။\n\n#### A Records\nA Record ဆိုတာ domain name ကနေ IP address ဆီကို direct လုပ်ပေးတဲ့ DNS record ဖြစ်ပါတယ်။\n\n1. \"Add New Record\" ခလုတ်ကိုနှိပ်ပါ\n2. Type: A Record\n3. Host: @ (ဒါက root domain အတွက်ပါ - yourdomain.com)\n\n> ကိုယ့်ရဲ့ root domain name က website တစ်ခုအတွက်သုံးပြီးသားဖြစ်နေပြီး subdomain တစ်ခုကိုပဲ VPS နဲ့ချိတ်ချင်တာဆိုရင်တော့ Host ထဲမှာ subdomain အတိုင်းထည့်ပေးလိုက်ရင်ရပါတယ်။ ဥပမာ `blog.yourdomain.com` ဆိုရင် `blog` လို့ပဲ Host ထဲမှာထည့်ပေးလိုက်ရင်ရပါပြီ\n\n4. Value: VPS ရဲ့ IP address ထည့်ပါ\n5. TTL: Automatic\n\n\n\n#### Adding A record for www subdomain\nတချို့ user တွေက website လိပ်စာထည့်တဲ့အခါ www ပါရိုက်ထည့်တတ်ကြတဲ့အတွက် www ပါရင်လည်း ဒီ ip address ကိုပဲပြပေးအောင် နောက်ထပ် A record ထပ်ထည့်ပေးပါမယ်။\n\n1. \"Add New Record\" ခလုတ်ကိုနှိပ်ပါ\n2. Type: A Record\n3. Host: www\n4. Value: VPS ရဲ့ IP address \n5. TTL: Automatic\n\n### Waiting for DNS changes propagation\nအခုလုပ်လိုက်တဲ့ DNS changes တွေက propagate ဖြစ်ဖို့ အချိန်ယူနိုင်ပါတယ်။ 24-48 နာရီလောက်ကြာမယ်လို့ပြောကြပေမယ့် နာရီဝက်၊ တစ်နာရီလောက်နဲ့လည်းအလုပ်လုပ်တာမျိုးရှိပါတယ်။\n\nDNS propagation ကိုစစ်ဆေးဖို့:\n```bash\ndig yourdomain.com\n``\nဒီ command run ကြည့်လိုက်လို့ ကိုယ့် VPS IP ပြနေပြီဆိုရင် DNS setting တွေအလုပ်လုပ်နေပါပြီ။\n\n### Let's Encrypt SSL Certificate\nDNS setting တွေပြီးဆုံးပြီး domain က အလုပ်လုပ်နေပြီဆိုရင် HTTPS အလုပ်လုပ်အောင် Let's Encrypt SSL Certificate သွင်းပေးပါမယ်။\n\n```bash\nsudo apt install certbot python3-certbot-apache\nsudo certbot --apache -d yourdomain.com -d www.yourdomain.com\n```\n\nCertbot မှာ အောက်ပါတန်ဖိုးတွေဆက်ထည့်ပေးပါ။\n\n1. Email address ထည့်ပေးပါ (သက်တမ်းကုန်ရက် နီးလာတဲ့အခါ notice ပို့ရန်)\n2. Terms of Service ကိုလက်ခံမလားမေးရင် \"A\" နဲ့ \"Agree\" ဖြေပါ\n3. EFF's email list ထဲထည့်မလားမေးရင် ကိုယ်နှစ်သက်ရာဖြေပါ\n4. HTTPS redirect လုပ်မလားမေးရင် နှစ်သက်ရာဖြေပါ (redirect လုပ်ရင် HTTP request တိုင်းကို HTTPS ကိုပြောင်းပေးပါတယ်)\n\nပြီးရင် https://yourdomain.com နဲ့ဝင်ကြည့်ရင် secure connection နဲ့ဝင်နိုင်ပါပြီ။\n\n### Checking SSL Auto-renewal\nLet's Encrypt certificate တွေက 90 ရက်ကြာရင် သက်တမ်းကုန်ပါတယ်။ Certbot က automatic renewal ပြုလုပ်ပေးနိုင်ပါတယ်။\n\n```bash\nsudo systemctl status certbot.timer\n```\n\nCertbot auto-renewal ကို dry-run လုပ်ကြည့်ပြီး စစ်လို့ရပါတယ်။\n\n```bash\nsudo certbot renew --dry-run\n```\n\nError မပြဘဲ dry run ပြီးသွားပြီဆိုရင် SSL certificate တွေ အော်တိုသက်တမ်းတိုးပေးနေပါလိမ့်မယ်\n\n## Conclusion\nဒါဆိုရင် VPS မှာ LAMP stack, Laravel install လုပ်ပြီး project deployment အဆင်သင့်ဖြစ်နေပါပြီ။ မိမိ website ကို ပိုပြီးလုံခြုံစေချင်ရင်တော့ Cloudflare နဲ့ချိတ်ဆက်ပြီး ဆက်လက်အသုံးပြုနိုင်ပါတယ်။","src/content/posts/vps-lamp-setup-06-domain-dns-ssl-setup.mdx",[141],"20267fe1c5c58e60","socials",["Map",200,201,207,208,215,216],"1",{"id":200,"data":202,"filePath":206},{"id":203,"icon":204,"text":20,"link":205},1,{"type":22,"name":23},"https://github.com/yethihahtwe","src/content/socials.json","2",{"id":207,"data":209,"filePath":206},{"id":210,"icon":211,"text":213,"link":214},2,{"type":22,"name":212},"linkedin","LinkedIn","https://linkedin.com/in/yethihahtwe","3",{"id":215,"data":217,"filePath":206},{"id":218,"icon":219,"text":221,"link":222},3,{"type":22,"name":220},"twitter","X(Twitter)","https://x.com/yethihahtwe","quickInfo",["Map",200,225,207,231],{"id":200,"data":226,"filePath":230},{"id":203,"icon":227,"text":229},{"type":22,"name":228},"code","Full-stack Web Developer","src/content/info.json",{"id":207,"data":232,"filePath":230},{"id":210,"icon":233,"text":235},{"type":22,"name":234},"smartphone","Mobile App Developer",["Map",77,237,107,240,63,242,136,244],{"id":77,"data":238,"filePath":239},{"id":77},"src/content/tags.json",{"id":107,"data":241,"filePath":239},{"id":107},{"id":63,"data":243,"filePath":239},{"id":63},{"id":136,"data":245,"filePath":239},{"id":136},"workExperience",["Map",248,249,257,258,265,266,273,274,215,280,207,286,200,292],"7",{"id":248,"data":250,"filePath":256},{"id":251,"title":252,"company":253,"duration":254,"description":255},7,"Editor-in-chief","Health Updates Journal","2012 - 2015","Content writing, translation of medical articles, social media page administration, hot line medical consultation, news reporting and interviewing medical persons.","src/content/work.json","6",{"id":257,"data":259,"filePath":256},{"id":260,"title":261,"company":262,"duration":263,"description":264},6,"General Practitioner/ Primary Care Physician","Private Practice","2012 - 2021","Private clinic providing primary healthcare, minor surgeries, and laboratory services. Collaborated with Population Services International and Myanmar Medical Association for TB and Malaria treatment programs. Founded and led `Heartyfarm` social welfare group organizing charity clinic activities.","5",{"id":265,"data":267,"filePath":256},{"id":268,"title":269,"company":270,"duration":271,"description":272},5,"ICT Consultant","Ethnic Health System Strengthening Group","April 2022 - Dec 2022","Comprehensive learning material creation and development of a Learning Management System (LMS).","4",{"id":273,"data":275,"filePath":256},{"id":276,"title":277,"company":270,"duration":278,"description":279},4,"ICT Manager","Dec 2022 - Sept 2024","Led data-driven application development and visualization dashboards. Supervise and manage day-to-day organizational IT tasks and systems.",{"id":215,"data":281,"filePath":256},{"id":218,"title":282,"company":283,"duration":284,"description":285},"Mobile and Web application development contractor","Civil Health and Development Network","Nov 2024 - Jan 2025","Development and implementation of a comprehensive malaria case reporting system. An offlie-first mobile app and a web based information management system.",{"id":207,"data":287,"filePath":256},{"id":210,"title":288,"company":289,"duration":290,"description":291},"IT Policy & Cybersecurity Consultant","Suwannimit Foundation","Nov 2024 - Feb 2025","A contractor role in providing cybersecurity training and developing IT policies related to data storage security and record management.",{"id":200,"data":293,"filePath":256},{"id":203,"title":294,"company":270,"duration":295,"description":296},"IT Specialist","Nov 2024 - present","A technical specialist role in developing information management systems."]